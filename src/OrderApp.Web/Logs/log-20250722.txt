2025-07-22 12:10:09.634 +04:00 [INF] Starting web host
2025-07-22 12:10:10.072 +04:00 [INF] Options were configured
2025-07-22 12:10:10.080 +04:00 [INF] Infrastructure services registered
2025-07-22 12:10:10.098 +04:00 [INF] Mediatr and Email Sender services registered
2025-07-22 12:10:10.788 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-22 12:10:11.875 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-22 12:10:11.888 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-07-22 12:10:12.050 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-07-22 12:10:12.255 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:10:12.297 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:10:12.428 +04:00 [DBG] Created DbConnection. (129ms).
2025-07-22 12:10:12.476 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:12.819 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:12.835 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-22 12:10:12.850 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (15ms).
2025-07-22 12:10:12.861 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (31ms).
2025-07-22 12:10:12.880 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:10:12.965 +04:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:10:12.980 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:12.999 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (9ms).
2025-07-22 12:10:13.041 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-07-22 12:10:13.042 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-07-22 12:10:13.044 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (4ms).
2025-07-22 12:10:13.046 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:13.048 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:13.056 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:10:13.217 +04:00 [INF] Executed DbCommand (162ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:10:13.220 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:13.222 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-07-22 12:10:13.230 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:10:13.235 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:13.239 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-07-22 12:10:13.359 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-22 12:10:13.420 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-07-22 12:10:13.782 +04:00 [INF] Registered 29 endpoints in 3,662 milliseconds.
2025-07-22 12:10:14.004 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:10:14.049 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-07-22 12:10:14.335 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-22 12:10:14.385 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:10:14.387 +04:00 [DBG] Created DbConnection. (1ms).
2025-07-22 12:10:14.391 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:14.395 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:14.397 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:10:14.400 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:10:14.404 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-22 12:10:14.408 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:10:14.434 +04:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:10:14.458 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:14.466 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 22ms reading results.
2025-07-22 12:10:14.471 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:14.478 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (6ms).
2025-07-22 12:10:14.485 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:10:14.490 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:10:14.499 +04:00 [DBG] Disposed connection to database '' on server '' (8ms).
2025-07-22 12:10:14.512 +04:00 [DBG] Hosting starting
2025-07-22 12:10:14.561 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 12:10:14.637 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-07-22 12:10:14.652 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-07-22 12:10:14.683 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-07-22 12:10:14.695 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:10:14.699 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-22 12:10:14.706 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:10:14.716 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-22 12:10:14.723 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-22 12:10:14.729 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-07-22 12:10:14.733 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-07-22 12:10:14.821 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-07-22 12:10:14.827 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-22 12:10:15.017 +04:00 [INF] Now listening on: https://localhost:57679
2025-07-22 12:10:15.020 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-07-22 12:10:15.024 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 12:10:15.026 +04:00 [INF] Hosting environment: Development
2025-07-22 12:10:15.030 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-07-22 12:10:15.034 +04:00 [DBG] Hosting started
2025-07-22 12:10:26.115 +04:00 [DBG] Connection id "0HNE8USRFELHJ" accepted.
2025-07-22 12:10:26.120 +04:00 [DBG] Connection id "0HNE8USRFELHJ" started.
2025-07-22 12:10:26.246 +04:00 [DBG] Connection 0HNE8USRFELHJ established using the following protocol: "Tls13"
2025-07-22 12:10:26.336 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/ - null null
2025-07-22 12:10:26.460 +04:00 [DBG] No candidates found for the request path '/'
2025-07-22 12:10:26.465 +04:00 [DBG] Request did not match any endpoints
2025-07-22 12:10:26.528 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:10:26.546 +04:00 [DBG] The request path  does not match the path filter
2025-07-22 12:10:26.740 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/   Responded with [404] in 181ms
2025-07-22 12:10:26.750 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/ - 404 157 application/json 417.3781ms
2025-07-22 12:10:26.773 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:57679/, Response status code: 404
2025-07-22 12:10:27.797 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/favicon.ico - null null
2025-07-22 12:10:27.806 +04:00 [DBG] No candidates found for the request path '/favicon.ico'
2025-07-22 12:10:27.808 +04:00 [DBG] Request did not match any endpoints
2025-07-22 12:10:27.813 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:10:27.824 +04:00 [DBG] The request path  does not match the path filter
2025-07-22 12:10:27.829 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/favicon.ico   Responded with [404] in 4ms
2025-07-22 12:10:27.840 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/favicon.ico - 404 157 application/json 43.2544ms
2025-07-22 12:10:27.847 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:57679/favicon.ico, Response status code: 404
2025-07-22 12:10:30.156 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-07-22 12:10:30.164 +04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-07-22 12:10:30.168 +04:00 [DBG] Request did not match any endpoints
2025-07-22 12:10:30.170 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:10:30.237 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 80.6029ms
2025-07-22 12:10:30.962 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-07-22 12:10:30.970 +04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-07-22 12:10:30.972 +04:00 [DBG] Request did not match any endpoints
2025-07-22 12:10:30.974 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:10:30.988 +04:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-07-22 12:10:31.062 +04:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-07-22 12:10:32.227 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 1265.477ms
2025-07-22 12:12:43.304 +04:00 [DBG] Connection id "0HNE8USRFELHJ" is closing.
2025-07-22 12:12:43.325 +04:00 [DBG] Connection id "0HNE8USRFELHJ" is closed. The last processed stream ID was 7.
2025-07-22 12:12:43.336 +04:00 [DBG] Connection id "0HNE8USRFELHJ" received FIN.
2025-07-22 12:12:43.342 +04:00 [DBG] Connection id "0HNE8USRFELHJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-07-22 12:12:43.347 +04:00 [DBG] The connection queue processing loop for 0HNE8USRFELHJ completed.
2025-07-22 12:12:43.358 +04:00 [DBG] Connection id "0HNE8USRFELHJ" stopped.
2025-07-22 12:15:17.112 +04:00 [INF] Application is shutting down...
2025-07-22 12:15:17.118 +04:00 [DBG] Hosting stopping
2025-07-22 12:15:17.152 +04:00 [DBG] Hosting stopped
2025-07-22 12:15:37.463 +04:00 [INF] Starting web host
2025-07-22 12:15:37.756 +04:00 [INF] Options were configured
2025-07-22 12:15:37.764 +04:00 [INF] Infrastructure services registered
2025-07-22 12:15:37.788 +04:00 [INF] Mediatr and Email Sender services registered
2025-07-22 12:15:38.330 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-22 12:15:39.110 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-22 12:15:39.121 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-07-22 12:15:39.182 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-07-22 12:15:39.294 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:15:39.312 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:15:39.361 +04:00 [DBG] Created DbConnection. (44ms).
2025-07-22 12:15:39.372 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.603 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.613 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-22 12:15:39.625 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (9ms).
2025-07-22 12:15:39.630 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (20ms).
2025-07-22 12:15:39.640 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:15:39.718 +04:00 [INF] Executed DbCommand (67ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:15:39.732 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.749 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (10ms).
2025-07-22 12:15:39.763 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-07-22 12:15:39.765 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-07-22 12:15:39.767 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-07-22 12:15:39.769 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.773 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.777 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:15:39.893 +04:00 [INF] Executed DbCommand (117ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:15:39.898 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.900 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-07-22 12:15:39.908 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:15:39.915 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:39.921 +04:00 [DBG] Disposed connection to database '' on server '' (6ms).
2025-07-22 12:15:39.986 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-22 12:15:40.032 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-07-22 12:15:40.265 +04:00 [INF] Registered 29 endpoints in 2,465 milliseconds.
2025-07-22 12:15:40.405 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:15:40.443 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-07-22 12:15:40.662 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-22 12:15:40.703 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:15:40.707 +04:00 [DBG] Created DbConnection. (3ms).
2025-07-22 12:15:40.710 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:40.714 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:40.718 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:15:40.722 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:15:40.725 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-07-22 12:15:40.729 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:15:40.749 +04:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:15:40.767 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:40.772 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 17ms reading results.
2025-07-22 12:15:40.776 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:40.778 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-07-22 12:15:40.784 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:15:40.788 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:15:40.791 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-07-22 12:15:40.798 +04:00 [DBG] Hosting starting
2025-07-22 12:15:40.816 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 12:15:40.844 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-07-22 12:15:40.857 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-07-22 12:15:40.876 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-07-22 12:15:40.886 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:15:40.892 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-22 12:15:40.899 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:15:40.918 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-22 12:15:40.928 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-22 12:15:40.940 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-07-22 12:15:40.949 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-07-22 12:15:41.049 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-07-22 12:15:41.057 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-22 12:15:41.209 +04:00 [INF] Now listening on: https://localhost:57679
2025-07-22 12:15:41.215 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-07-22 12:15:41.220 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 12:15:41.224 +04:00 [INF] Hosting environment: Development
2025-07-22 12:15:41.228 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-07-22 12:15:41.232 +04:00 [DBG] Hosting started
2025-07-22 12:25:40.313 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" accepted.
2025-07-22 12:25:40.330 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" started.
2025-07-22 12:25:40.569 +04:00 [DBG] Connection 0HNE8V5BTQUUK established using the following protocol: "Tls13"
2025-07-22 12:25:40.810 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Companies - null null
2025-07-22 12:25:41.187 +04:00 [DBG] 1 candidate(s) found for the request path '/Companies'
2025-07-22 12:25:41.195 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Companies'
2025-07-22 12:25:41.357 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:25:41.396 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-22 12:25:41.402 +04:00 [INF] Executing endpoint 'HTTP: GET /Companies'
2025-07-22 12:25:41.642 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:25:41.653 +04:00 [DBG] Compiling query expression: 
'DbSet<Company>()'
2025-07-22 12:25:41.777 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Company>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Company.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Company.Name (string) Required, 1] }
        SELECT c.Id, c.Name
        FROM Companies AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Company.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Company.Name (string) Required, 1] }
        SELECT c.Id, c.Name
        FROM Companies AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Company entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Company instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Company);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Company.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.CompanyAggregate.Company").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Company)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Company | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.CompanyAggregate.Company")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Company | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.CompanyAggregate.Company")]: 
                        {
                            return 
                            {
                                Company instance;
                                instance = new Company();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Company | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.CompanyAggregate.Company")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Company)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-22 12:25:41.805 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:25:41.810 +04:00 [DBG] Created DbConnection. (5ms).
2025-07-22 12:25:41.813 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:41.829 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:41.833 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:25:41.836 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:25:41.841 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-07-22 12:25:41.844 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name]
FROM [Companies] AS [c]
2025-07-22 12:25:41.867 +04:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Name]
FROM [Companies] AS [c]
2025-07-22 12:25:41.953 +04:00 [DBG] Context 'AppDbContext' started tracking 'Company' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:41.989 +04:00 [DBG] Context 'AppDbContext' started tracking 'Company' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:41.996 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:42.001 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 126ms reading results.
2025-07-22 12:25:42.006 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:42.012 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (6ms).
2025-07-22 12:25:42.060 +04:00 [INF] Executed endpoint 'HTTP: GET /Companies'
2025-07-22 12:25:42.419 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Companies   Responded with [200] in 1020ms
2025-07-22 12:25:42.430 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:25:42.436 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:42.440 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-07-22 12:25:42.446 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Companies - 200 252 application/json 1643.7508ms
2025-07-22 12:25:56.806 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Orders - null null
2025-07-22 12:25:56.823 +04:00 [DBG] 1 candidate(s) found for the request path '/Orders'
2025-07-22 12:25:56.829 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-07-22 12:25:56.838 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:25:56.845 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-22 12:25:56.851 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-07-22 12:25:56.909 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:25:56.972 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-07-22 12:25:57.057 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-07-22 12:25:57.068 +04:00 [DBG] Including navigation: 'Order.User'.
2025-07-22 12:25:57.301 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-22 12:25:57.356 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:25:57.358 +04:00 [DBG] Created DbConnection. (2ms).
2025-07-22 12:25:57.362 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:57.367 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:57.371 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:25:57.374 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:25:57.378 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-07-22 12:25:57.383 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-07-22 12:25:57.414 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-07-22 12:25:57.436 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.533 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.540 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.585 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.589 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.608 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.613 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.617 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:25:57.623 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:57.627 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 204ms reading results.
2025-07-22 12:25:57.632 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:57.637 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (4ms).
2025-07-22 12:25:57.708 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-07-22 12:25:57.742 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Orders   Responded with [200] in 896ms
2025-07-22 12:25:57.746 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:25:57.749 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:25:57.755 +04:00 [DBG] Disposed connection to database '' on server '' (6ms).
2025-07-22 12:25:57.760 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Orders - 200 1056 application/json 954.3948ms
2025-07-22 12:26:12.877 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Users - null null
2025-07-22 12:26:12.889 +04:00 [DBG] 1 candidate(s) found for the request path '/Users'
2025-07-22 12:26:12.892 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-07-22 12:26:12.896 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:26:12.900 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-22 12:26:12.904 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-07-22 12:26:12.918 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:26:12.929 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Roles)'
2025-07-22 12:26:12.935 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-07-22 12:26:13.016 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (User)(resultContext.Values[0]), 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            selfIdentifier: (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }, 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                UserRole entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    UserRole instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(UserRole);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (UserRole)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                {
                                    shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                    return 
                                    {
                                        UserRole instance;
                                        instance = new UserRole();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                        instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserRole)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{8}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (User)(resultContext.Values[0]) : default(User);
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-22 12:26:13.045 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:26:13.047 +04:00 [DBG] Created DbConnection. (2ms).
2025-07-22 12:26:13.051 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:13.055 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:13.060 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:26:13.064 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:26:13.068 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-07-22 12:26:13.072 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-07-22 12:26:13.089 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-07-22 12:26:13.096 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.121 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.138 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.143 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.148 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.153 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.159 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.163 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.168 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.175 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.202 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.207 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.211 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.280 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.283 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.287 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.290 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.293 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.296 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.310 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.320 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.323 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.327 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.332 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.337 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.341 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.343 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.346 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.352 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.356 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.359 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.362 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.367 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.372 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.376 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.380 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.385 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.390 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.394 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.399 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.405 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.408 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.413 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.418 +04:00 [DBG] Context 'AppDbContext' started tracking 'UserRole' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:13.423 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:13.427 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 332ms reading results.
2025-07-22 12:26:13.433 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:13.437 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (4ms).
2025-07-22 12:26:13.475 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-07-22 12:26:13.486 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Users   Responded with [200] in 585ms
2025-07-22 12:26:13.489 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:26:13.493 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:13.496 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-07-22 12:26:13.501 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Users - 200 3492 application/json 624.4934ms
2025-07-22 12:26:37.171 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Roles - null null
2025-07-22 12:26:37.177 +04:00 [DBG] 1 candidate(s) found for the request path '/Roles'
2025-07-22 12:26:37.182 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Roles'
2025-07-22 12:26:37.188 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:26:37.205 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:26:37.213 +04:00 [DBG] Policy authentication schemes Bearer did not succeed
2025-07-22 12:26:37.228 +04:00 [INF] Authorization failed. Fail() was explicitly called.
2025-07-22 12:26:37.239 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 12:26:37.242 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Roles - 401 0 null 71.4387ms
2025-07-22 12:26:50.716 +04:00 [INF] Request starting HTTP/2 POST https://localhost:57679/auth/login - application/json 50
2025-07-22 12:26:50.726 +04:00 [DBG] 1 candidate(s) found for the request path '/auth/login'
2025-07-22 12:26:50.732 +04:00 [DBG] Request matched endpoint 'HTTP: POST /auth/login'
2025-07-22 12:26:50.737 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-22 12:26:50.759 +04:00 [DBG] Connection id "0HNE8V5BTQUUK", Request id "0HNE8V5BTQUUK:00000009": started reading request body.
2025-07-22 12:26:50.769 +04:00 [DBG] Connection id "0HNE8V5BTQUUK", Request id "0HNE8V5BTQUUK:00000009": done reading request body.
2025-07-22 12:26:50.779 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-22 12:26:50.785 +04:00 [INF] Executing endpoint 'HTTP: POST /auth/login'
2025-07-22 12:26:50.920 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:26:50.949 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Name == __name_0 && u.Password == __password_1)
    .FirstOrDefault()'
2025-07-22 12:26:50.985 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            SELECT TOP(1) u.Id, u.Email, u.Name, u.Password
            FROM Users AS u
            WHERE (u.Name == @__name_0) && (u.Password == @__password_1)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            SELECT TOP(1) u.Id, u.Email, u.Name, u.Password
            FROM Users AS u
            WHERE (u.Name == @__name_0) && (u.Password == @__password_1), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-22 12:26:51.049 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:26:51.054 +04:00 [DBG] Created DbConnection. (4ms).
2025-07-22 12:26:51.061 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.069 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.078 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:26:51.085 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-07-22 12:26:51.106 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (27ms).
2025-07-22 12:26:51.123 +04:00 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Users] AS [u]
WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
2025-07-22 12:26:51.203 +04:00 [INF] Executed DbCommand (89ms) [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Users] AS [u]
WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
2025-07-22 12:26:51.217 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:26:51.226 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.238 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 21ms reading results.
2025-07-22 12:26:51.248 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.256 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (7ms).
2025-07-22 12:26:51.288 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.296 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.304 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:26:51.311 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-07-22 12:26:51.318 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-07-22 12:26:51.327 +04:00 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Users] AS [u]
WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
2025-07-22 12:26:51.339 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Users] AS [u]
WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
2025-07-22 12:26:51.354 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.363 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 9ms reading results.
2025-07-22 12:26:51.374 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.383 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (8ms).
2025-07-22 12:26:51.499 +04:00 [INF] Executed endpoint 'HTTP: POST /auth/login'
2025-07-22 12:26:51.508 +04:00 [INF] Source:[::1] Request: POST https localhost:57679/auth/login  {
  "username": "string",
  "password": "string"
} Responded with [200] in 763ms
2025-07-22 12:26:51.517 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:26:51.523 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:26:51.531 +04:00 [DBG] Disposed connection to database '' on server '' (7ms).
2025-07-22 12:26:51.539 +04:00 [INF] Request finished HTTP/2 POST https://localhost:57679/auth/login - 200 541 application/json 822.1971ms
2025-07-22 12:27:07.830 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Roles - null null
2025-07-22 12:27:07.881 +04:00 [DBG] 1 candidate(s) found for the request path '/Roles'
2025-07-22 12:27:07.896 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Roles'
2025-07-22 12:27:08.053 +04:00 [DBG] Successfully validated the token.
2025-07-22 12:27:08.059 +04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-07-22 12:27:08.064 +04:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-07-22 12:27:08.082 +04:00 [DBG] Authorization was successful.
2025-07-22 12:27:08.084 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-22 12:27:08.088 +04:00 [INF] Executing endpoint 'HTTP: GET /Roles'
2025-07-22 12:27:08.104 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:27:08.115 +04:00 [DBG] Compiling query expression: 
'DbSet<Role>()'
2025-07-22 12:27:08.138 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Role>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Role.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Role.Name (string) Required, 1] }
        SELECT r.Id, r.Name
        FROM Roles AS r) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Role.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Role.Name (string) Required, 1] }
        SELECT r.Id, r.Name
        FROM Roles AS r, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Role entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Role instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Role);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Role.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Role)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")]: 
                        {
                            return 
                            {
                                Role instance;
                                instance = new Role();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Name>k__BackingField = dataReader.GetString(1);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Role)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-22 12:27:08.169 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:27:08.174 +04:00 [DBG] Created DbConnection. (5ms).
2025-07-22 12:27:08.182 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:27:08.191 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:27:08.200 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:27:08.206 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-07-22 12:27:08.215 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-07-22 12:27:08.223 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[Id], [r].[Name]
FROM [Roles] AS [r]
2025-07-22 12:27:08.245 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [r].[Id], [r].[Name]
FROM [Roles] AS [r]
2025-07-22 12:27:08.266 +04:00 [DBG] Context 'AppDbContext' started tracking 'Role' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:27:08.288 +04:00 [DBG] Context 'AppDbContext' started tracking 'Role' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-22 12:27:08.297 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:27:08.305 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 46ms reading results.
2025-07-22 12:27:08.315 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:27:08.324 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (8ms).
2025-07-22 12:27:08.359 +04:00 [INF] Executed endpoint 'HTTP: GET /Roles'
2025-07-22 12:27:08.367 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Roles   Responded with [200] in 282ms
2025-07-22 12:27:08.373 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:27:08.383 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:27:08.391 +04:00 [DBG] Disposed connection to database '' on server '' (7ms).
2025-07-22 12:27:08.401 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Roles - 200 236 application/json 570.6341ms
2025-07-22 12:27:46.227 +04:00 [INF] Application is shutting down...
2025-07-22 12:27:46.228 +04:00 [DBG] Hosting stopping
2025-07-22 12:27:46.239 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" is closing.
2025-07-22 12:27:46.242 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" is closed. The last processed stream ID was 11.
2025-07-22 12:27:46.246 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" received FIN.
2025-07-22 12:27:46.250 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-07-22 12:27:46.253 +04:00 [DBG] The connection queue processing loop for 0HNE8V5BTQUUK completed.
2025-07-22 12:27:46.263 +04:00 [DBG] Connection id "0HNE8V5BTQUUK" stopped.
2025-07-22 12:27:46.277 +04:00 [DBG] Hosting stopped
2025-07-22 12:41:06.224 +04:00 [INF] Starting web host
2025-07-22 12:41:06.645 +04:00 [INF] Options were configured
2025-07-22 12:41:06.653 +04:00 [INF] Infrastructure services registered
2025-07-22 12:41:06.678 +04:00 [INF] Mediatr and Email Sender services registered
2025-07-22 12:41:07.265 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-22 12:41:08.405 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-22 12:41:08.436 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-07-22 12:41:08.534 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-07-22 12:41:08.663 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:41:08.702 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:41:08.775 +04:00 [DBG] Created DbConnection. (71ms).
2025-07-22 12:41:08.787 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.124 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.144 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-22 12:41:09.161 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (16ms).
2025-07-22 12:41:09.168 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (29ms).
2025-07-22 12:41:09.181 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:41:09.276 +04:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-22 12:41:09.287 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.304 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (10ms).
2025-07-22 12:41:09.318 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-07-22 12:41:09.319 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-07-22 12:41:09.322 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (5ms).
2025-07-22 12:41:09.333 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.338 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.340 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:41:09.746 +04:00 [INF] Executed DbCommand (405ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-07-22 12:41:09.749 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.751 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-07-22 12:41:09.759 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:41:09.765 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:09.769 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-07-22 12:41:09.884 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-22 12:41:10.004 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-07-22 12:41:10.455 +04:00 [INF] Registered 29 endpoints in 3,762 milliseconds.
2025-07-22 12:41:10.752 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-07-22 12:41:10.837 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-07-22 12:41:11.240 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-22 12:41:11.306 +04:00 [DBG] Creating DbConnection.
2025-07-22 12:41:11.308 +04:00 [DBG] Created DbConnection. (2ms).
2025-07-22 12:41:11.313 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:11.319 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:11.321 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-22 12:41:11.323 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-07-22 12:41:11.325 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-07-22 12:41:11.328 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:41:11.378 +04:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-22 12:41:11.400 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:11.404 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 17ms reading results.
2025-07-22 12:41:11.406 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:11.410 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (3ms).
2025-07-22 12:41:11.414 +04:00 [DBG] 'AppDbContext' disposed.
2025-07-22 12:41:11.418 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-07-22 12:41:11.420 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-07-22 12:41:11.424 +04:00 [DBG] Hosting starting
2025-07-22 12:41:11.457 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 12:41:11.492 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-07-22 12:41:11.502 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-07-22 12:41:11.517 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-07-22 12:41:11.523 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:41:11.527 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-22 12:41:11.531 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-22 12:41:11.537 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-22 12:41:11.540 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-22 12:41:11.545 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-07-22 12:41:11.549 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-07-22 12:41:11.615 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-07-22 12:41:11.620 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-22 12:41:11.755 +04:00 [INF] Now listening on: https://localhost:57679
2025-07-22 12:41:11.767 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-07-22 12:41:11.771 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 12:41:11.772 +04:00 [INF] Hosting environment: Development
2025-07-22 12:41:11.774 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-07-22 12:41:11.776 +04:00 [DBG] Hosting started
