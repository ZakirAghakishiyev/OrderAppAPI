2025-08-05 09:17:09.993 +04:00 [INF] Starting web host
2025-08-05 09:17:15.376 +04:00 [INF] Options were configured
2025-08-05 09:17:15.916 +04:00 [INF] Infrastructure services registered
2025-08-05 09:17:16.675 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-05 09:17:20.148 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-05 09:17:21.079 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-05 09:17:21.237 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-05 09:17:21.243 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-05 09:17:21.249 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-05 09:17:21.254 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-05 09:17:21.259 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-05 09:17:21.321 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-05 09:17:21.418 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-05 09:17:21.776 +04:00 [DBG] Creating DbConnection.
2025-08-05 09:17:21.834 +04:00 [DBG] Created DbConnection. (56ms).
2025-08-05 09:17:21.845 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:22.987 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.032 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-05 09:17:23.067 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (35ms).
2025-08-05 09:17:23.085 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (66ms).
2025-08-05 09:17:23.128 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-05 09:17:23.268 +04:00 [INF] Executed DbCommand (139ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-05 09:17:23.285 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.325 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (24ms).
2025-08-05 09:17:23.362 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-05 09:17:23.369 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (7ms).
2025-08-05 09:17:23.378 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (16ms).
2025-08-05 09:17:23.386 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.404 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.427 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-05 09:17:23.697 +04:00 [INF] Executed DbCommand (270ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-05 09:17:23.701 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.703 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-05 09:17:23.710 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-05 09:17:23.716 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:23.719 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-05 09:17:23.799 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-05 09:17:23.839 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-05 09:17:24.087 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-05 09:17:24.591 +04:00 [INF] Registered 30 endpoints in 7,894 milliseconds.
2025-08-05 09:17:25.402 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-05 09:17:25.454 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-05 09:17:25.787 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-05 09:17:25.868 +04:00 [DBG] Creating DbConnection.
2025-08-05 09:17:25.873 +04:00 [DBG] Created DbConnection. (4ms).
2025-08-05 09:17:25.878 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:25.882 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:25.883 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-05 09:17:25.885 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-05 09:17:25.887 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-08-05 09:17:25.891 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-05 09:17:25.929 +04:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-05 09:17:25.975 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:25.989 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 41ms reading results.
2025-08-05 09:17:26.030 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:26.039 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (9ms).
2025-08-05 09:17:26.048 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-05 09:17:26.055 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:17:26.062 +04:00 [DBG] Disposed connection to database '' on server '' (6ms).
2025-08-05 09:17:26.077 +04:00 [DBG] Hosting starting
2025-08-05 09:17:26.133 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-05 09:17:26.380 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-05 09:17:26.390 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-05 09:17:26.405 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-05 09:17:26.424 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-05 09:17:26.451 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-05 09:17:26.471 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-05 09:17:26.484 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-05 09:17:26.497 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-05 09:17:26.506 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-05 09:17:26.513 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-05 09:17:26.519 +04:00 [DBG] Using key {96abcfc1-a88e-4936-885f-a725baea972b} as the default key.
2025-08-05 09:17:26.523 +04:00 [DBG] Key ring with default key {96abcfc1-a88e-4936-885f-a725baea972b} was loaded during application startup.
2025-08-05 09:17:26.628 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-05 09:17:26.631 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-05 09:17:26.736 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-05 09:17:26.738 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-05 09:17:26.739 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-05 09:17:26.740 +04:00 [INF] Hosting environment: Development
2025-08-05 09:17:26.742 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-05 09:17:26.748 +04:00 [DBG] Hosting started
2025-08-05 09:17:38.955 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" accepted.
2025-08-05 09:17:38.971 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" started.
2025-08-05 09:17:39.060 +04:00 [DBG] Connection 0HNEJRTIN1MIV established using the following protocol: "Tls13"
2025-08-05 09:17:39.143 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/ - null null
2025-08-05 09:17:39.247 +04:00 [DBG] 1 candidate(s) found for the request path '/'
2025-08-05 09:17:39.249 +04:00 [DBG] Request matched endpoint 'HTTP: GET /'
2025-08-05 09:17:41.281 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:17:41.300 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-05 09:17:41.302 +04:00 [INF] Executing endpoint 'HTTP: GET /'
2025-08-05 09:17:41.305 +04:00 [INF] Executed endpoint 'HTTP: GET /'
2025-08-05 09:17:41.495 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/   Responded with [200] in 196ms
2025-08-05 09:17:41.507 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/ - 200 114 application/json 2382.528ms
2025-08-05 09:17:42.767 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/favicon.ico - null null
2025-08-05 09:17:42.782 +04:00 [DBG] No candidates found for the request path '/favicon.ico'
2025-08-05 09:17:42.786 +04:00 [DBG] Request did not match any endpoints
2025-08-05 09:17:42.793 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:17:42.797 +04:00 [DBG] The request path  does not match the path filter
2025-08-05 09:17:42.829 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/favicon.ico   Responded with [404] in 31ms
2025-08-05 09:17:42.833 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/favicon.ico - 404 157 application/json 66.2247ms
2025-08-05 09:17:42.845 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:57679/favicon.ico, Response status code: 404
2025-08-05 09:17:44.156 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" received FIN.
2025-08-05 09:17:44.161 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" is closed. The last processed stream ID was 3.
2025-08-05 09:17:44.173 +04:00 [DBG] The connection queue processing loop for 0HNEJRTIN1MIV completed.
2025-08-05 09:17:44.184 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:17:44.232 +04:00 [DBG] Connection id "0HNEJRTIN1MIV" stopped.
2025-08-05 09:18:29.706 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" accepted.
2025-08-05 09:18:29.709 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" started.
2025-08-05 09:18:29.722 +04:00 [DBG] Connection 0HNEJRTIN1MJ0 established using the following protocol: "Tls13"
2025-08-05 09:18:29.727 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-08-05 09:18:29.738 +04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-08-05 09:18:29.743 +04:00 [DBG] Request did not match any endpoints
2025-08-05 09:18:29.748 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:29.812 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 84.7437ms
2025-08-05 09:18:30.256 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-08-05 09:18:30.260 +04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-08-05 09:18:30.262 +04:00 [DBG] Request did not match any endpoints
2025-08-05 09:18:30.264 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:30.458 +04:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-05 09:18:30.515 +04:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-05 09:18:32.082 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 1826.284ms
2025-08-05 09:18:33.970 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" received FIN.
2025-08-05 09:18:33.972 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" is closed. The last processed stream ID was 3.
2025-08-05 09:18:33.972 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:18:33.978 +04:00 [DBG] The connection queue processing loop for 0HNEJRTIN1MJ0 completed.
2025-08-05 09:18:33.983 +04:00 [DBG] Connection id "0HNEJRTIN1MJ0" stopped.
2025-08-05 09:18:52.500 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" accepted.
2025-08-05 09:18:52.502 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" started.
2025-08-05 09:18:52.514 +04:00 [DBG] Connection 0HNEJRTIN1MJ1 established using the following protocol: "Tls13"
2025-08-05 09:18:52.526 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-08-05 09:18:52.545 +04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-08-05 09:18:52.552 +04:00 [DBG] Request did not match any endpoints
2025-08-05 09:18:52.556 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:52.566 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 40.7714ms
2025-08-05 09:18:53.639 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-08-05 09:18:53.645 +04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-08-05 09:18:53.648 +04:00 [DBG] Request did not match any endpoints
2025-08-05 09:18:53.650 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:53.654 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 14.7702ms
2025-08-05 09:18:53.987 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" received FIN.
2025-08-05 09:18:53.999 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" is closed. The last processed stream ID was 3.
2025-08-05 09:18:54.000 +04:00 [DBG] The connection queue processing loop for 0HNEJRTIN1MJ1 completed.
2025-08-05 09:18:54.009 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:18:54.023 +04:00 [DBG] Connection id "0HNEJRTIN1MJ1" stopped.
2025-08-05 09:18:55.120 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" accepted.
2025-08-05 09:18:55.122 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" started.
2025-08-05 09:18:55.136 +04:00 [DBG] Connection 0HNEJRTIN1MJ2 established using the following protocol: "Tls13"
2025-08-05 09:18:55.142 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/health - null null
2025-08-05 09:18:55.149 +04:00 [DBG] 1 candidate(s) found for the request path '/health'
2025-08-05 09:18:55.156 +04:00 [DBG] Request matched endpoint 'Health checks'
2025-08-05 09:18:55.165 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:55.174 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-05 09:18:55.182 +04:00 [INF] Executing endpoint 'Health checks'
2025-08-05 09:18:55.202 +04:00 [DBG] Running health checks
2025-08-05 09:18:55.211 +04:00 [DBG] Running health check Custom_Check
2025-08-05 09:18:55.225 +04:00 [DBG] Running health check Order API
2025-08-05 09:18:55.225 +04:00 [DBG] Running health check User API
2025-08-05 09:18:55.229 +04:00 [DBG] Health check Custom_Check with status "Healthy" completed after 7.5171ms with message 'Ok'
2025-08-05 09:18:55.253 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/orders
2025-08-05 09:18:55.253 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/users
2025-08-05 09:18:55.260 +04:00 [INF] Sending HTTP request GET https://localhost:57679/orders
2025-08-05 09:18:55.263 +04:00 [INF] Sending HTTP request GET https://localhost:57679/users
2025-08-05 09:18:55.352 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" accepted.
2025-08-05 09:18:55.358 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" started.
2025-08-05 09:18:55.358 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" accepted.
2025-08-05 09:18:55.387 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" started.
2025-08-05 09:18:55.395 +04:00 [DBG] Connection 0HNEJRTIN1MJ3 established using the following protocol: "Tls13"
2025-08-05 09:18:55.402 +04:00 [DBG] Connection 0HNEJRTIN1MJ4 established using the following protocol: "Tls13"
2025-08-05 09:18:55.413 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/orders - null null
2025-08-05 09:18:55.413 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/users - null null
2025-08-05 09:18:55.419 +04:00 [DBG] 1 candidate(s) found for the request path '/orders'
2025-08-05 09:18:55.422 +04:00 [DBG] 1 candidate(s) found for the request path '/users'
2025-08-05 09:18:55.424 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-08-05 09:18:55.425 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-08-05 09:18:55.426 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:55.427 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-05 09:18:55.429 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-05 09:18:55.432 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-05 09:18:55.434 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-08-05 09:18:55.435 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-08-05 09:18:55.680 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-05 09:18:55.680 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-05 09:18:55.732 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Roles)'
2025-08-05 09:18:55.732 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-08-05 09:18:55.770 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-08-05 09:18:55.774 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-08-05 09:18:55.780 +04:00 [DBG] Including navigation: 'Order.User'.
2025-08-05 09:18:56.076 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-05 09:18:56.100 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (User)(resultContext.Values[0]), 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            selfIdentifier: (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }, 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                UserRole entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    UserRole instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(UserRole);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (UserRole)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                {
                                    shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                    return 
                                    {
                                        UserRole instance;
                                        instance = new UserRole();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                        instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserRole)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{8}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (User)(resultContext.Values[0]) : default(User);
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-05 09:18:56.183 +04:00 [DBG] Creating DbConnection.
2025-08-05 09:18:56.184 +04:00 [DBG] Creating DbConnection.
2025-08-05 09:18:56.188 +04:00 [DBG] Created DbConnection. (4ms).
2025-08-05 09:18:56.190 +04:00 [DBG] Created DbConnection. (6ms).
2025-08-05 09:18:56.195 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.197 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.201 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.208 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-05 09:18:56.213 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-08-05 09:18:56.216 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-08-05 09:18:56.220 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-05 09:18:56.227 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.231 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-05 09:18:56.235 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-08-05 09:18:56.239 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-08-05 09:18:56.244 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-05 09:18:56.275 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-05 09:18:56.275 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-05 09:18:56.381 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.384 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.471 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.481 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.487 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.490 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 208ms reading results.
2025-08-05 09:18:56.495 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.498 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (3ms).
2025-08-05 09:18:56.519 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.527 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.557 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.562 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.569 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.573 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.577 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.582 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.587 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.592 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.595 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.600 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.604 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.608 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-08-05 09:18:56.610 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.616 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.620 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.625 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.629 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.633 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.637 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.641 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.648 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.652 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.656 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.662 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.667 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.671 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.675 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.683 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.689 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.694 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.701 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.705 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.708 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/users   Responded with [200] in 1275ms
2025-08-05 09:18:56.715 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.716 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" completed keep alive response.
2025-08-05 09:18:56.720 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.725 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-05 09:18:56.727 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.735 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.738 +04:00 [INF] Received HTTP response headers after 1461.0251ms - 200
2025-08-05 09:18:56.738 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.738 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.742 +04:00 [INF] End processing HTTP request after 1489.8724ms - 200
2025-08-05 09:18:56.744 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.749 +04:00 [DBG] Disposed connection to database '' on server '' (10ms).
2025-08-05 09:18:56.754 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.756 +04:00 [DBG] Health check User API with status "Healthy" completed after 1530.8069ms with message 'null'
2025-08-05 09:18:56.757 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/users - 200 454 application/json 1345.4974ms
2025-08-05 09:18:56.759 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.773 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.776 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.781 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.783 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.786 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.789 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.792 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.796 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.799 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.802 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.805 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.808 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.812 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.816 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.819 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.822 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.825 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.829 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-05 09:18:56.833 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.835 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 547ms reading results.
2025-08-05 09:18:56.839 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:56.842 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-05 09:18:56.899 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-08-05 09:18:56.952 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/orders   Responded with [200] in 1523ms
2025-08-05 09:18:56.953 +04:00 [INF] Received HTTP response headers after 1686.1778ms - 200
2025-08-05 09:18:56.957 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" completed keep alive response.
2025-08-05 09:18:56.963 +04:00 [INF] End processing HTTP request after 1710.9886ms - 200
2025-08-05 09:18:56.969 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-05 09:18:56.978 +04:00 [DBG] Health check Order API with status "Healthy" completed after 1752.7184ms with message 'null'
2025-08-05 09:18:56.983 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-05 09:18:57.001 +04:00 [DBG] Disposed connection to database '' on server '' (17ms).
2025-08-05 09:18:57.019 +04:00 [DBG] Health check processing with combined status "Healthy" completed after 1800.2375ms
2025-08-05 09:18:57.027 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/orders - 200 12676 application/json 1615.985ms
2025-08-05 09:18:57.239 +04:00 [INF] Executed endpoint 'Health checks'
2025-08-05 09:18:57.242 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/health   Responded with [200] in 2068ms
2025-08-05 09:18:57.244 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/health - 200 643 application/json 2102.6562ms
2025-08-05 09:18:58.984 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" received FIN.
2025-08-05 09:18:58.988 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" is closed. The last processed stream ID was 1.
2025-08-05 09:18:58.988 +04:00 [DBG] The connection queue processing loop for 0HNEJRTIN1MJ2 completed.
2025-08-05 09:18:58.992 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:18:58.998 +04:00 [DBG] Connection id "0HNEJRTIN1MJ2" stopped.
2025-08-05 09:20:10.365 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" received FIN.
2025-08-05 09:20:10.365 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" received FIN.
2025-08-05 09:20:10.368 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:20:10.371 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-05 09:20:10.373 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" disconnecting.
2025-08-05 09:20:10.376 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" disconnecting.
2025-08-05 09:20:10.379 +04:00 [DBG] Connection id "0HNEJRTIN1MJ4" stopped.
2025-08-05 09:20:10.379 +04:00 [DBG] Connection id "0HNEJRTIN1MJ3" stopped.
2025-08-05 09:20:55.268 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'User API'
2025-08-05 09:20:55.268 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'Order API'
2025-08-05 09:21:05.301 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:05.322 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0794ms - processed: 0 items - remaining: 2 items
2025-08-05 09:21:15.349 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:15.352 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0115ms - processed: 0 items - remaining: 2 items
2025-08-05 09:21:25.362 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:25.364 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0102ms - processed: 0 items - remaining: 2 items
2025-08-05 09:21:35.379 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:35.382 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0122ms - processed: 0 items - remaining: 2 items
2025-08-05 09:21:45.400 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:45.407 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0091ms - processed: 0 items - remaining: 2 items
2025-08-05 09:21:55.422 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:21:55.424 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0103ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:05.496 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:07.242 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.014ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:18.152 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:18.156 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0222ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:28.171 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:28.175 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0068ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:38.185 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:38.191 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0172ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:48.212 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:48.216 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0073ms - processed: 0 items - remaining: 2 items
2025-08-05 09:22:58.227 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:22:58.231 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0314ms - processed: 0 items - remaining: 2 items
2025-08-05 09:23:08.249 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-05 09:23:08.324 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 39.8623ms - processed: 2 items - remaining: 0 items
