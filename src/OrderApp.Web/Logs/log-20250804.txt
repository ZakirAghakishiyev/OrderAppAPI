2025-08-04 11:14:51.550 +04:00 [INF] Starting web host
2025-08-04 11:14:59.757 +04:00 [INF] Options were configured
2025-08-04 11:14:59.947 +04:00 [INF] Infrastructure services registered
2025-08-04 11:15:00.338 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 11:15:03.244 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 11:15:03.928 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 11:15:04.101 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 11:15:04.105 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:15:04.110 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:15:04.114 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:15:04.118 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:15:04.201 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 11:15:04.296 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:15:04.655 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:15:04.711 +04:00 [DBG] Created DbConnection. (50ms).
2025-08-04 11:15:04.721 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:05.611 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:05.627 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 11:15:05.643 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (11ms).
2025-08-04 11:15:05.649 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (24ms).
2025-08-04 11:15:05.663 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 11:15:05.760 +04:00 [INF] Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 11:15:05.779 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:05.815 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (23ms).
2025-08-04 11:15:05.839 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 11:15:05.847 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (7ms).
2025-08-04 11:15:05.857 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (17ms).
2025-08-04 11:15:05.866 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:05.879 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:05.892 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 11:15:06.159 +04:00 [INF] Executed DbCommand (270ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 11:15:06.165 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:06.167 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 11:15:06.174 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:15:06.182 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:06.188 +04:00 [DBG] Disposed connection to database '' on server '' (5ms).
2025-08-04 11:15:06.266 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 11:15:06.324 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 11:15:06.360 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 11:15:06.812 +04:00 [INF] Registered 30 endpoints in 6,451 milliseconds.
2025-08-04 11:15:07.457 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:15:07.506 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 11:15:07.799 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 11:15:07.849 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:15:07.852 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 11:15:07.855 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:07.860 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:07.865 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:15:07.869 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-08-04 11:15:07.872 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-08-04 11:15:07.878 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 11:15:07.926 +04:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 11:15:07.948 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:07.953 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 17ms reading results.
2025-08-04 11:15:07.956 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:07.960 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (4ms).
2025-08-04 11:15:07.964 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:15:07.967 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:07.970 +04:00 [DBG] Disposed connection to database '' on server '' (3ms).
2025-08-04 11:15:07.976 +04:00 [DBG] Hosting starting
2025-08-04 11:15:08.000 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 11:15:08.131 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 11:15:08.142 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 11:15:08.167 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 11:15:08.174 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:15:08.177 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 11:15:08.182 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:15:08.189 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 11:15:08.211 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 11:15:08.216 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 11:15:08.227 +04:00 [DBG] Key {d76fcede-8a6f-46d5-9032-13cac50778bc} is no longer under consideration as default key because it is expired, revoked, or cannot be deciphered.
2025-08-04 11:15:08.232 +04:00 [DBG] Repository contains no viable default key. Caller should generate a key with immediate activation.
2025-08-04 11:15:08.234 +04:00 [DBG] Policy resolution states that a new key should be added to the key ring.
2025-08-04 11:15:08.246 +04:00 [INF] Creating key {96abcfc1-a88e-4936-885f-a725baea972b} with creation date 2025-08-04 07:15:08Z, activation date 2025-08-04 16:06:59Z, and expiration date 2025-11-02 07:15:08Z.
2025-08-04 11:15:08.260 +04:00 [DBG] Descriptor deserializer type for key {96abcfc1-a88e-4936-885f-a725baea972b} is 'Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.
2025-08-04 11:15:08.272 +04:00 [DBG] No key escrow sink found. Not writing key {96abcfc1-a88e-4936-885f-a725baea972b} to escrow.
2025-08-04 11:15:08.284 +04:00 [DBG] Encrypting to Windows DPAPI for current user account (DESKTOP-ZAKIR\zakir).
2025-08-04 11:15:08.308 +04:00 [INF] Writing data to file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 11:15:08.313 +04:00 [DBG] Key cache expiration token triggered by 'CreateNewKey' operation.
2025-08-04 11:15:08.314 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 11:15:08.317 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 11:15:08.318 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 11:15:08.320 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 11:15:08.323 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 11:15:08.326 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 11:15:08.328 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 11:15:08.332 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 11:15:08.334 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 11:15:08.421 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 11:15:08.422 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 11:15:08.505 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 11:15:08.508 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 11:15:08.512 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 11:15:08.514 +04:00 [INF] Hosting environment: Development
2025-08-04 11:15:08.516 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 11:15:08.520 +04:00 [DBG] Hosting started
2025-08-04 11:15:16.783 +04:00 [DBG] Connection id "0HNEJ4QKT4979" accepted.
2025-08-04 11:15:16.787 +04:00 [DBG] Connection id "0HNEJ4QKT4979" started.
2025-08-04 11:15:16.892 +04:00 [DBG] Connection 0HNEJ4QKT4979 established using the following protocol: "Tls13"
2025-08-04 11:15:17.017 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/ - null null
2025-08-04 11:15:17.136 +04:00 [DBG] 1 candidate(s) found for the request path '/'
2025-08-04 11:15:17.140 +04:00 [DBG] Request matched endpoint 'HTTP: GET /'
2025-08-04 11:15:24.556 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:15:24.614 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:15:24.646 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-08-04 11:15:24.774 +04:00 [INF] Executing endpoint 'HTTP: GET /'
2025-08-04 11:15:24.775 +04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-08-04 11:15:24.778 +04:00 [DBG] Request did not match any endpoints
2025-08-04 11:15:24.781 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:15:24.789 +04:00 [INF] Executed endpoint 'HTTP: GET /'
2025-08-04 11:15:24.997 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 349.5309ms
2025-08-04 11:15:25.015 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/   Responded with [200] in 399ms
2025-08-04 11:15:25.025 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/ - 200 114 application/json 8011.2118ms
2025-08-04 11:15:26.378 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-08-04 11:15:26.391 +04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-08-04 11:15:26.392 +04:00 [DBG] Request did not match any endpoints
2025-08-04 11:15:26.394 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:15:26.547 +04:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-04 11:15:26.605 +04:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-04 11:15:28.156 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 1777.5806ms
2025-08-04 11:15:29.359 +04:00 [DBG] Connection id "0HNEJ4QKT4979" received FIN.
2025-08-04 11:15:29.367 +04:00 [DBG] Connection id "0HNEJ4QKT4979" is closed. The last processed stream ID was 5.
2025-08-04 11:15:29.369 +04:00 [DBG] The connection queue processing loop for 0HNEJ4QKT4979 completed.
2025-08-04 11:15:29.377 +04:00 [DBG] Connection id "0HNEJ4QKT4979" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:15:29.403 +04:00 [DBG] Connection id "0HNEJ4QKT4979" stopped.
2025-08-04 11:15:36.713 +04:00 [DBG] Connection id "0HNEJ4QKT497A" accepted.
2025-08-04 11:15:36.719 +04:00 [DBG] Connection id "0HNEJ4QKT497A" started.
2025-08-04 11:15:36.758 +04:00 [DBG] Connection 0HNEJ4QKT497A established using the following protocol: "Tls13"
2025-08-04 11:15:36.762 +04:00 [INF] Request starting HTTP/2 POST https://localhost:57679/auth/login - application/json 50
2025-08-04 11:15:36.766 +04:00 [DBG] 1 candidate(s) found for the request path '/auth/login'
2025-08-04 11:15:36.769 +04:00 [DBG] Request matched endpoint 'HTTP: POST /auth/login'
2025-08-04 11:15:36.771 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:15:36.774 +04:00 [DBG] The request has an origin header: 'https://localhost:57679'.
2025-08-04 11:15:36.776 +04:00 [INF] CORS policy execution failed.
2025-08-04 11:15:36.777 +04:00 [INF] Request origin https://localhost:57679 does not have permission to access the resource.
2025-08-04 11:15:36.787 +04:00 [DBG] Connection id "0HNEJ4QKT497A", Request id "0HNEJ4QKT497A:00000001": started reading request body.
2025-08-04 11:15:36.790 +04:00 [DBG] Connection id "0HNEJ4QKT497A", Request id "0HNEJ4QKT497A:00000001": done reading request body.
2025-08-04 11:15:36.795 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:15:36.796 +04:00 [INF] Executing endpoint 'HTTP: POST /auth/login'
2025-08-04 11:15:37.031 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:15:37.071 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Where(u => u.Name == __name_0 && u.Password == __password_1)
    .Include(u => u.Roles)
    .ThenInclude(r => r.Role)
    .FirstOrDefault()'
2025-08-04 11:15:37.115 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-08-04 11:15:37.128 +04:00 [DBG] Including navigation: 'UserRole.Role'.
2025-08-04 11:15:37.507 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<User>(
    asyncEnumerable: SingleQueryingEnumerable.Create<User>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
                3 -> Dictionary<IProperty, int> { [Property: Role.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Role.Name (string) Required, 9] }
                4 -> 4
                5 -> 8
            SELECT u1.Id, u1.Email, u1.Name, u1.Password, s.Id, s.RoleId, s.UserId, s.UserId1, s.Id0, s.Name
            FROM 
            (
                SELECT TOP(1) u.Id, u.Email, u.Name, u.Password
                FROM Users AS u
                WHERE (u.Name == @__name_0) && (u.Password == @__password_1)
            ) AS u1
            LEFT JOIN 
            (
                SELECT u0.Id, u0.RoleId, u0.UserId, u0.UserId1, r.Id AS Id0, r.Name
                FROM UserRoles AS u0
                INNER JOIN Roles AS r ON u0.RoleId == r.Id
            ) AS s ON u1.Id == s.UserId
            ORDER BY u1.Id ASC, s.Id ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
                3 -> Dictionary<IProperty, int> { [Property: Role.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 8], [Property: Role.Name (string) Required, 9] }
                4 -> 4
                5 -> 8
            SELECT u1.Id, u1.Email, u1.Name, u1.Password, s.Id, s.RoleId, s.UserId, s.UserId1, s.Id0, s.Name
            FROM 
            (
                SELECT TOP(1) u.Id, u.Email, u.Name, u.Password
                FROM Users AS u
                WHERE (u.Name == @__name_0) && (u.Password == @__password_1)
            ) AS u1
            LEFT JOIN 
            (
                SELECT u0.Id, u0.RoleId, u0.UserId, u0.UserId1, r.Id AS Id0, r.Name
                FROM UserRoles AS u0
                INNER JOIN Roles AS r ON u0.RoleId == r.Id
            ) AS s ON u1.Id == s.UserId
            ORDER BY u1.Id ASC, s.Id ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                User entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    User instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(User);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (User)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                                {
                                    return 
                                    {
                                        User instance;
                                        instance = new User();
                                        instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                        instance.<Email>k__BackingField = dataReader.GetString(1);
                                        instance.<Name>k__BackingField = dataReader.GetString(2);
                                        instance.<Password>k__BackingField = dataReader.GetString(3);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(User)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (User)(resultContext.Values[0]), 
                    parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                    outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                    navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                selfIdentifier: (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4), 
                    (object)dataReader.IsDBNull(8) ? default(int?) : (int?)dataReader.GetInt32(8) 
                }, 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    UserRole entity;
                    Role entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        UserRole instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(UserRole);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (UserRole)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                    {
                                        shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                        return 
                                        {
                                            UserRole instance;
                                            instance = new UserRole();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                            instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                            instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(UserRole)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Role instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Role);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Role.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(8) ? default(object) : (object)dataReader.GetInt32(8) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Role)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")]: 
                                    {
                                        return 
                                        {
                                            Role instance;
                                            instance = new Role();
                                            instance.<Id>k__BackingField = dataReader.IsDBNull(8) ? default(int) : dataReader.GetInt32(8);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(9) ? default(string) : dataReader.GetString(9);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Role | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.Role")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Role)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<UserRole, UserRole, Role>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: UserRole.Role (Role) ToPrincipal Role | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindNavigation("Role")], 
                        inverseNavigation: default(INavigation), 
                        fixup: (namelessParameter{12}, namelessParameter{13}) => 
                        {
                            return namelessParameter{12}.<Role>k__BackingField = namelessParameter{13};
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: default(INavigationBase), 
                fixup: (namelessParameter{14}, namelessParameter{15}) => 
                {
                    return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                        entity: namelessParameter{14}, 
                        value: namelessParameter{15}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (User)(resultContext.Values[0]) : default(User);
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 11:15:37.582 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:15:37.587 +04:00 [DBG] Created DbConnection. (5ms).
2025-08-04 11:15:37.590 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:37.595 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:37.598 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:15:37.607 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-08-04 11:15:37.635 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (36ms).
2025-08-04 11:15:37.657 +04:00 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u1].[Id], [u1].[Email], [u1].[Name], [u1].[Password], [s].[Id], [s].[RoleId], [s].[UserId], [s].[UserId1], [s].[Id0], [s].[Name]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
    FROM [Users] AS [u]
    WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
) AS [u1]
LEFT JOIN (
    SELECT [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1], [r].[Id] AS [Id0], [r].[Name]
    FROM [UserRoles] AS [u0]
    INNER JOIN [Roles] AS [r] ON [u0].[RoleId] = [r].[Id]
) AS [s] ON [u1].[Id] = [s].[UserId]
ORDER BY [u1].[Id], [s].[Id]
2025-08-04 11:15:38.024 +04:00 [INF] Executed DbCommand (378ms) [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u1].[Id], [u1].[Email], [u1].[Name], [u1].[Password], [s].[Id], [s].[RoleId], [s].[UserId], [s].[UserId1], [s].[Id0], [s].[Name]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
    FROM [Users] AS [u]
    WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
) AS [u1]
LEFT JOIN (
    SELECT [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1], [r].[Id] AS [Id0], [r].[Name]
    FROM [UserRoles] AS [u0]
    INNER JOIN [Roles] AS [r] ON [u0].[RoleId] = [r].[Id]
) AS [s] ON [u1].[Id] = [s].[UserId]
ORDER BY [u1].[Id], [s].[Id]
2025-08-04 11:15:38.127 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:15:38.229 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.233 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 203ms reading results.
2025-08-04 11:15:38.235 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.255 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (19ms).
2025-08-04 11:15:38.269 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.272 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.274 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:15:38.276 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 11:15:38.280 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-08-04 11:15:38.283 +04:00 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u1].[Id], [u1].[Email], [u1].[Name], [u1].[Password], [s].[Id], [s].[RoleId], [s].[UserId], [s].[UserId1], [s].[Id0], [s].[Name]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
    FROM [Users] AS [u]
    WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
) AS [u1]
LEFT JOIN (
    SELECT [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1], [r].[Id] AS [Id0], [r].[Name]
    FROM [UserRoles] AS [u0]
    INNER JOIN [Roles] AS [r] ON [u0].[RoleId] = [r].[Id]
) AS [s] ON [u1].[Id] = [s].[UserId]
ORDER BY [u1].[Id], [s].[Id]
2025-08-04 11:15:38.314 +04:00 [INF] Executed DbCommand (31ms) [Parameters=[@__name_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [u1].[Id], [u1].[Email], [u1].[Name], [u1].[Password], [s].[Id], [s].[RoleId], [s].[UserId], [s].[UserId1], [s].[Id0], [s].[Name]
FROM (
    SELECT TOP(1) [u].[Id], [u].[Email], [u].[Name], [u].[Password]
    FROM [Users] AS [u]
    WHERE [u].[Name] = @__name_0 AND [u].[Password] = @__password_1
) AS [u1]
LEFT JOIN (
    SELECT [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1], [r].[Id] AS [Id0], [r].[Name]
    FROM [UserRoles] AS [u0]
    INNER JOIN [Roles] AS [r] ON [u0].[RoleId] = [r].[Id]
) AS [s] ON [u1].[Id] = [s].[UserId]
ORDER BY [u1].[Id], [s].[Id]
2025-08-04 11:15:38.323 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.325 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 5ms reading results.
2025-08-04 11:15:38.327 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:38.329 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 11:15:38.929 +04:00 [INF] Executed endpoint 'HTTP: POST /auth/login'
2025-08-04 11:15:38.999 +04:00 [INF] Source:[::1] Request: POST https localhost:57679/auth/login  {
  "username": "string",
  "password": "string"
} Responded with [200] in 2219ms
2025-08-04 11:15:39.005 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:15:39.012 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:15:39.016 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 11:15:39.018 +04:00 [INF] Request finished HTTP/2 POST https://localhost:57679/auth/login - 200 540 application/json 2256.1579ms
2025-08-04 11:15:44.367 +04:00 [DBG] Connection id "0HNEJ4QKT497A" received FIN.
2025-08-04 11:15:44.373 +04:00 [DBG] Connection id "0HNEJ4QKT497A" is closed. The last processed stream ID was 1.
2025-08-04 11:15:44.373 +04:00 [DBG] The connection queue processing loop for 0HNEJ4QKT497A completed.
2025-08-04 11:15:44.377 +04:00 [DBG] Connection id "0HNEJ4QKT497A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:15:44.392 +04:00 [DBG] Connection id "0HNEJ4QKT497A" stopped.
2025-08-04 11:21:12.257 +04:00 [INF] Application is shutting down...
2025-08-04 11:21:12.258 +04:00 [DBG] Hosting stopping
2025-08-04 11:21:12.317 +04:00 [DBG] Hosting stopped
2025-08-04 11:41:50.316 +04:00 [INF] Starting web host
2025-08-04 11:41:51.210 +04:00 [INF] Options were configured
2025-08-04 11:41:51.218 +04:00 [INF] Infrastructure services registered
2025-08-04 11:41:51.246 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 11:41:52.385 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 11:41:53.519 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 11:41:53.759 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 11:41:53.763 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:41:53.766 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:41:53.768 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:41:53.779 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 11:41:53.885 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 11:41:54.000 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:41:54.034 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:41:54.106 +04:00 [DBG] Created DbConnection. (68ms).
2025-08-04 11:41:54.115 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:54.650 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:54.664 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 11:41:54.680 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (14ms).
2025-08-04 11:41:54.686 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (26ms).
2025-08-04 11:41:54.703 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 11:41:54.862 +04:00 [INF] Executed DbCommand (148ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 11:41:54.869 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:54.884 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (9ms).
2025-08-04 11:41:54.896 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 11:41:54.898 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-08-04 11:41:54.899 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (3ms).
2025-08-04 11:41:54.902 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:54.904 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:54.906 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 11:41:55.443 +04:00 [INF] Executed DbCommand (537ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 11:41:55.449 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:55.452 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 11:41:55.460 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:41:55.465 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:55.468 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 11:41:55.588 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 11:41:55.709 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 11:41:55.759 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 11:41:56.240 +04:00 [INF] Registered 30 endpoints in 4,965 milliseconds.
2025-08-04 11:41:56.450 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:41:56.517 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 11:41:56.904 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 11:41:57.007 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:41:57.017 +04:00 [DBG] Created DbConnection. (9ms).
2025-08-04 11:41:57.018 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:57.020 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:57.023 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:41:57.031 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-08-04 11:41:57.033 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-08-04 11:41:57.036 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 11:41:57.104 +04:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 11:41:57.136 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:57.140 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 22ms reading results.
2025-08-04 11:41:57.143 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:57.146 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (3ms).
2025-08-04 11:41:57.149 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:41:57.151 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:41:57.154 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 11:41:57.158 +04:00 [DBG] Hosting starting
2025-08-04 11:41:57.192 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 11:41:57.397 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 11:41:57.405 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 11:41:57.416 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 11:41:57.434 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 11:41:57.448 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 11:41:57.457 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:41:57.463 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 11:41:57.469 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:41:57.476 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 11:41:57.480 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 11:41:57.484 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-04 11:41:57.487 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:41:57.490 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 11:41:57.492 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 11:41:57.496 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 11:41:57.501 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 11:41:57.507 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 11:41:57.513 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 11:41:57.607 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 11:41:57.612 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 11:41:57.809 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 11:41:57.810 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 11:41:57.812 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 11:41:57.813 +04:00 [INF] Hosting environment: Development
2025-08-04 11:41:57.814 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 11:41:57.819 +04:00 [DBG] Hosting started
2025-08-04 11:42:11.651 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" accepted.
2025-08-04 11:42:11.653 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" started.
2025-08-04 11:42:11.746 +04:00 [DBG] Connection 0HNEJ59M5MUF6 established using the following protocol: "Tls13"
2025-08-04 11:42:11.825 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/ - null null
2025-08-04 11:42:11.929 +04:00 [DBG] 1 candidate(s) found for the request path '/'
2025-08-04 11:42:11.932 +04:00 [DBG] Request matched endpoint 'HTTP: GET /'
2025-08-04 11:42:11.992 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:12.017 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:42:12.022 +04:00 [INF] Executing endpoint 'HTTP: GET /'
2025-08-04 11:42:12.027 +04:00 [INF] Executed endpoint 'HTTP: GET /'
2025-08-04 11:42:12.211 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/   Responded with [200] in 197ms
2025-08-04 11:42:12.218 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/ - 200 114 application/json 396.7348ms
2025-08-04 11:42:13.465 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/favicon.ico - null null
2025-08-04 11:42:13.474 +04:00 [DBG] No candidates found for the request path '/favicon.ico'
2025-08-04 11:42:13.479 +04:00 [DBG] Request did not match any endpoints
2025-08-04 11:42:13.481 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:13.483 +04:00 [DBG] The request path  does not match the path filter
2025-08-04 11:42:13.500 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/favicon.ico   Responded with [404] in 16ms
2025-08-04 11:42:13.507 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/favicon.ico - 404 157 application/json 41.3905ms
2025-08-04 11:42:13.524 +04:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:57679/favicon.ico, Response status code: 404
2025-08-04 11:42:15.156 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-08-04 11:42:15.160 +04:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-08-04 11:42:15.163 +04:00 [DBG] Request did not match any endpoints
2025-08-04 11:42:15.164 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:15.201 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 44.5294ms
2025-08-04 11:42:15.946 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-08-04 11:42:15.949 +04:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-08-04 11:42:15.951 +04:00 [DBG] Request did not match any endpoints
2025-08-04 11:42:15.952 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:15.959 +04:00 [DBG] Executing API description provider 'EndpointMetadataApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-04 11:42:15.993 +04:00 [DBG] Executing API description provider 'DefaultApiDescriptionProvider' from assembly Microsoft.AspNetCore.Mvc.ApiExplorer v9.0.0.0.
2025-08-04 11:42:16.333 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Users - null null
2025-08-04 11:42:16.344 +04:00 [DBG] 1 candidate(s) found for the request path '/Users'
2025-08-04 11:42:16.348 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-08-04 11:42:16.351 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:16.357 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:42:16.362 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-08-04 11:42:16.556 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:42:16.585 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Roles)'
2025-08-04 11:42:16.615 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-08-04 11:42:16.938 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (User)(resultContext.Values[0]), 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            selfIdentifier: (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }, 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                UserRole entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    UserRole instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(UserRole);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (UserRole)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                {
                                    shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                    return 
                                    {
                                        UserRole instance;
                                        instance = new UserRole();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                        instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserRole)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{8}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (User)(resultContext.Values[0]) : default(User);
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 11:42:17.227 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:42:17.247 +04:00 [DBG] Created DbConnection. (20ms).
2025-08-04 11:42:17.250 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:17.270 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:17.280 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:42:17.293 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (13ms).
2025-08-04 11:42:17.304 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (23ms).
2025-08-04 11:42:17.318 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 11:42:17.371 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 11:42:17.466 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:17.497 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:17.499 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:17.502 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:17.503 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 127ms reading results.
2025-08-04 11:42:17.508 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:17.510 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 11:42:17.578 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 1631.9596ms
2025-08-04 11:42:17.579 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-08-04 11:42:17.636 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Users   Responded with [200] in 1278ms
2025-08-04 11:42:17.638 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:42:17.648 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:17.656 +04:00 [DBG] Disposed connection to database '' on server '' (8ms).
2025-08-04 11:42:17.669 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Users - 200 454 application/json 1335.9294ms
2025-08-04 11:42:21.719 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" received FIN.
2025-08-04 11:42:21.723 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" is closed. The last processed stream ID was 9.
2025-08-04 11:42:21.724 +04:00 [DBG] The connection queue processing loop for 0HNEJ59M5MUF6 completed.
2025-08-04 11:42:21.725 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:42:21.736 +04:00 [DBG] Connection id "0HNEJ59M5MUF6" stopped.
2025-08-04 11:42:31.992 +04:00 [DBG] Connection id "0HNEJ59M5MUF7" accepted.
2025-08-04 11:42:31.993 +04:00 [DBG] Connection id "0HNEJ59M5MUF7" started.
2025-08-04 11:42:31.993 +04:00 [DBG] Connection id "0HNEJ59M5MUF8" accepted.
2025-08-04 11:42:31.996 +04:00 [DBG] Connection id "0HNEJ59M5MUF8" started.
2025-08-04 11:42:32.001 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 11:42:32.029 +04:00 [DBG] Connection id "0HNEJ59M5MUF7" stopped.
2025-08-04 11:42:32.031 +04:00 [DBG] Connection id "0HNEJ59M5MUF7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:42:33.064 +04:00 [DBG] Connection id "0HNEJ59M5MUF9" accepted.
2025-08-04 11:42:33.065 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 11:42:33.066 +04:00 [DBG] Connection id "0HNEJ59M5MUF9" started.
2025-08-04 11:42:33.070 +04:00 [DBG] Connection id "0HNEJ59M5MUF8" stopped.
2025-08-04 11:42:33.071 +04:00 [DBG] Connection id "0HNEJ59M5MUF8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:42:33.074 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 11:42:33.080 +04:00 [DBG] Connection id "0HNEJ59M5MUF9" stopped.
2025-08-04 11:42:33.082 +04:00 [DBG] Connection id "0HNEJ59M5MUF9" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:42:33.085 +04:00 [DBG] Connection id "0HNEJ59M5MUFA" accepted.
2025-08-04 11:42:33.087 +04:00 [DBG] Connection id "0HNEJ59M5MUFA" started.
2025-08-04 11:42:33.088 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 11:42:33.096 +04:00 [DBG] Connection id "0HNEJ59M5MUFA" stopped.
2025-08-04 11:42:33.098 +04:00 [DBG] Connection id "0HNEJ59M5MUFA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:42:52.688 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" accepted.
2025-08-04 11:42:52.690 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" started.
2025-08-04 11:42:52.698 +04:00 [DBG] Connection 0HNEJ59M5MUFB established using the following protocol: "Tls13"
2025-08-04 11:42:52.701 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/Users - null null
2025-08-04 11:42:52.706 +04:00 [DBG] 1 candidate(s) found for the request path '/Users'
2025-08-04 11:42:52.709 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-08-04 11:42:52.710 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:52.712 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:42:52.713 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-08-04 11:42:52.716 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:42:52.726 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:42:52.728 +04:00 [DBG] Created DbConnection. (1ms).
2025-08-04 11:42:52.729 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:52.730 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:52.732 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:42:52.734 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-04 11:42:52.735 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-08-04 11:42:52.739 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 11:42:52.746 +04:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 11:42:52.749 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:52.752 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:52.755 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:52.757 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:52.758 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 9ms reading results.
2025-08-04 11:42:52.760 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:52.762 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 11:42:52.765 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-08-04 11:42:52.770 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/Users   Responded with [200] in 57ms
2025-08-04 11:42:52.772 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:42:52.774 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:52.776 +04:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-08-04 11:42:52.778 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/Users - 200 454 application/json 77.051ms
2025-08-04 11:42:59.234 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/orders - null null
2025-08-04 11:42:59.237 +04:00 [DBG] 1 candidate(s) found for the request path '/orders'
2025-08-04 11:42:59.239 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-08-04 11:42:59.241 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 11:42:59.242 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 11:42:59.243 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-08-04 11:42:59.253 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 11:42:59.262 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-08-04 11:42:59.275 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-08-04 11:42:59.278 +04:00 [DBG] Including navigation: 'Order.User'.
2025-08-04 11:42:59.310 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 11:42:59.332 +04:00 [DBG] Creating DbConnection.
2025-08-04 11:42:59.337 +04:00 [DBG] Created DbConnection. (5ms).
2025-08-04 11:42:59.339 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:59.344 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:59.346 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 11:42:59.349 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 11:42:59.357 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-08-04 11:42:59.359 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 11:42:59.403 +04:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 11:42:59.411 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.464 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.469 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.478 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.480 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.482 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.484 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.486 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.488 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.489 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.492 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.493 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.496 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.497 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.499 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.501 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.503 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.504 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.506 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.507 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.509 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.511 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.514 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.516 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.518 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.519 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.521 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.522 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.523 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.525 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.526 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.528 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.530 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.532 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.534 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.535 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.538 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.539 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.541 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.543 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.545 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.546 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.548 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.549 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.552 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.553 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.556 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.557 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.559 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.560 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.562 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.563 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.565 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.567 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.569 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.571 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.573 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.575 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.577 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.578 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 11:42:59.580 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:59.581 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 175ms reading results.
2025-08-04 11:42:59.583 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:59.587 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (3ms).
2025-08-04 11:42:59.620 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-08-04 11:42:59.644 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/orders   Responded with [200] in 402ms
2025-08-04 11:42:59.646 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 11:42:59.649 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 11:42:59.653 +04:00 [DBG] Disposed connection to database '' on server '' (4ms).
2025-08-04 11:42:59.657 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/orders - 200 12676 application/json 423.2304ms
2025-08-04 11:43:01.751 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" received FIN.
2025-08-04 11:43:01.753 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" is closed. The last processed stream ID was 3.
2025-08-04 11:43:01.753 +04:00 [DBG] The connection queue processing loop for 0HNEJ59M5MUFB completed.
2025-08-04 11:43:01.755 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:43:01.767 +04:00 [DBG] Connection id "0HNEJ59M5MUFB" stopped.
2025-08-04 11:44:54.483 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" accepted.
2025-08-04 11:44:54.485 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" started.
2025-08-04 11:44:54.493 +04:00 [DBG] Connection 0HNEJ59M5MUFC established using the following protocol: "Tls13"
2025-08-04 11:44:54.498 +04:00 [INF] Request starting HTTP/2 POST https://localhost:57679/Orders - application/json 78
2025-08-04 11:44:54.503 +04:00 [DBG] 1 candidate(s) found for the request path '/Orders'
2025-08-04 11:44:54.506 +04:00 [DBG] Request matched endpoint 'HTTP: POST /Orders'
2025-08-04 11:44:54.594 +04:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '04-Aug-25 07:15:38', Current time (UTC): '04-Aug-25 07:44:54'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-04 11:44:54.599 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '04-Aug-25 07:15:38', Current time (UTC): '04-Aug-25 07:44:54'.
2025-08-04 11:44:54.606 +04:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '04-Aug-25 07:15:38', Current time (UTC): '04-Aug-25 07:44:54'.
2025-08-04 11:44:54.608 +04:00 [DBG] Policy authentication schemes Bearer did not succeed
2025-08-04 11:44:54.619 +04:00 [INF] Authorization failed. Fail() was explicitly called.
2025-08-04 11:44:54.629 +04:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-04 11:44:54.631 +04:00 [INF] Request finished HTTP/2 POST https://localhost:57679/Orders - 401 0 null 132.807ms
2025-08-04 11:44:54.637 +04:00 [DBG] Connection id "0HNEJ59M5MUFC", Request id "0HNEJ59M5MUFC:00000001": started reading request body.
2025-08-04 11:44:54.639 +04:00 [DBG] Connection id "0HNEJ59M5MUFC", Request id "0HNEJ59M5MUFC:00000001": done reading request body.
2025-08-04 11:44:56.886 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" received FIN.
2025-08-04 11:44:56.889 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" is closed. The last processed stream ID was 1.
2025-08-04 11:44:56.889 +04:00 [DBG] The connection queue processing loop for 0HNEJ59M5MUFC completed.
2025-08-04 11:44:56.891 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 11:44:56.907 +04:00 [DBG] Connection id "0HNEJ59M5MUFC" stopped.
2025-08-04 11:50:26.326 +04:00 [INF] Application is shutting down...
2025-08-04 11:50:26.327 +04:00 [DBG] Hosting stopping
2025-08-04 11:50:26.379 +04:00 [DBG] Hosting stopped
2025-08-04 12:08:27.584 +04:00 [INF] Starting web host
2025-08-04 12:08:28.238 +04:00 [INF] Options were configured
2025-08-04 12:08:28.246 +04:00 [INF] Infrastructure services registered
2025-08-04 12:08:28.268 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 12:08:28.931 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 12:08:29.590 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 12:08:29.866 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 12:08:29.884 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:08:29.892 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:08:29.900 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:08:29.903 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:08:30.022 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 12:08:30.143 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:08:30.180 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:08:30.260 +04:00 [DBG] Created DbConnection. (77ms).
2025-08-04 12:08:30.270 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.582 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.595 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 12:08:30.607 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (10ms).
2025-08-04 12:08:30.613 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (21ms).
2025-08-04 12:08:30.623 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:08:30.689 +04:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:08:30.696 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.711 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (8ms).
2025-08-04 12:08:30.718 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 12:08:30.719 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (1ms).
2025-08-04 12:08:30.721 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (2ms).
2025-08-04 12:08:30.722 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.725 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.728 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:08:30.912 +04:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:08:30.914 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.916 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:08:30.922 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:08:30.926 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:30.929 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:08:31.009 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 12:08:31.051 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 12:08:31.099 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 12:08:31.389 +04:00 [INF] Registered 30 endpoints in 3,100 milliseconds.
2025-08-04 12:08:31.546 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:08:31.591 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 12:08:31.842 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 12:08:31.889 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:08:31.892 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:08:31.894 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:31.895 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:31.897 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:08:31.898 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-04 12:08:31.900 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:08:31.902 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:08:31.925 +04:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:08:31.940 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:31.944 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 12ms reading results.
2025-08-04 12:08:31.946 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:31.948 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:08:31.950 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:08:31.951 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:08:31.953 +04:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-08-04 12:08:31.958 +04:00 [DBG] Hosting starting
2025-08-04 12:08:31.984 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 12:08:32.125 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 12:08:32.129 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 12:08:32.137 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 12:08:32.146 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 12:08:32.155 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 12:08:32.161 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:08:32.166 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:08:32.169 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:08:32.177 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:08:32.180 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:08:32.186 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-04 12:08:32.191 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:08:32.196 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:08:32.198 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:08:32.202 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:08:32.208 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:08:32.212 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 12:08:32.214 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 12:08:32.281 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 12:08:32.283 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 12:08:32.385 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 12:08:32.386 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 12:08:32.388 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 12:08:32.389 +04:00 [INF] Hosting environment: Development
2025-08-04 12:08:32.391 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 12:08:32.397 +04:00 [DBG] Hosting started
2025-08-04 12:08:38.612 +04:00 [DBG] Connection id "0HNEJ5OF454K5" accepted.
2025-08-04 12:08:38.614 +04:00 [DBG] Connection id "0HNEJ5OF454K5" started.
2025-08-04 12:08:38.697 +04:00 [DBG] Connection 0HNEJ5OF454K5 established using the following protocol: "Tls13"
2025-08-04 12:08:38.791 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/ - null null
2025-08-04 12:08:38.895 +04:00 [DBG] 1 candidate(s) found for the request path '/'
2025-08-04 12:08:38.897 +04:00 [DBG] Request matched endpoint 'HTTP: GET /'
2025-08-04 12:08:38.945 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:08:38.964 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:08:38.965 +04:00 [INF] Executing endpoint 'HTTP: GET /'
2025-08-04 12:08:38.968 +04:00 [INF] Executed endpoint 'HTTP: GET /'
2025-08-04 12:08:39.127 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/   Responded with [200] in 160ms
2025-08-04 12:08:39.132 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/ - 200 114 application/json 344.4849ms
2025-08-04 12:08:41.482 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/health - null null
2025-08-04 12:08:41.490 +04:00 [DBG] 1 candidate(s) found for the request path '/health'
2025-08-04 12:08:41.492 +04:00 [DBG] Request matched endpoint 'Health checks'
2025-08-04 12:08:41.498 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:08:41.500 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:08:41.509 +04:00 [INF] Executing endpoint 'Health checks'
2025-08-04 12:08:41.518 +04:00 [DBG] Running health checks
2025-08-04 12:08:41.528 +04:00 [DBG] Running health check Custom_Check
2025-08-04 12:08:41.536 +04:00 [DBG] Health check Custom_Check with status "Healthy" completed after 4.2875ms with message 'Ok'
2025-08-04 12:08:41.540 +04:00 [DBG] Running health check External API
2025-08-04 12:08:41.552 +04:00 [INF] Start processing HTTP request GET https://example.com/api/health
2025-08-04 12:08:41.560 +04:00 [INF] Sending HTTP request GET https://example.com/api/health
2025-08-04 12:08:42.634 +04:00 [INF] Received HTTP response headers after 1066.1426ms - 404
2025-08-04 12:08:42.638 +04:00 [INF] End processing HTTP request after 1086.3924ms - 404
2025-08-04 12:08:42.648 +04:00 [ERR] Health check External API with status "Unhealthy" completed after 1107.8085ms with message 'Discover endpoint #0 is not responding with code in 200...299 range, the current status is NotFound.'
2025-08-04 12:08:42.667 +04:00 [DBG] Health check processing with combined status "Unhealthy" completed after 1143.6418ms
2025-08-04 12:08:42.769 +04:00 [INF] Executed endpoint 'Health checks'
2025-08-04 12:08:42.842 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/health   Responded with [503] in 1341ms
2025-08-04 12:08:42.847 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/health - 503 695 application/json 1365.3187ms
2025-08-04 12:08:46.062 +04:00 [DBG] Connection id "0HNEJ5OF454K5" received FIN.
2025-08-04 12:08:46.067 +04:00 [DBG] Connection id "0HNEJ5OF454K5" is closed. The last processed stream ID was 3.
2025-08-04 12:08:46.068 +04:00 [DBG] The connection queue processing loop for 0HNEJ5OF454K5 completed.
2025-08-04 12:08:46.069 +04:00 [DBG] Connection id "0HNEJ5OF454K5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:08:46.081 +04:00 [DBG] Connection id "0HNEJ5OF454K5" stopped.
2025-08-04 12:09:48.891 +04:00 [DBG] Connection id "0HNEJ5OF454K6" accepted.
2025-08-04 12:09:48.893 +04:00 [DBG] Connection id "0HNEJ5OF454K7" accepted.
2025-08-04 12:09:48.893 +04:00 [DBG] Connection id "0HNEJ5OF454K6" started.
2025-08-04 12:09:48.894 +04:00 [DBG] Connection id "0HNEJ5OF454K7" started.
2025-08-04 12:09:48.900 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:09:48.923 +04:00 [DBG] Connection id "0HNEJ5OF454K6" stopped.
2025-08-04 12:09:48.925 +04:00 [DBG] Connection id "0HNEJ5OF454K6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:09:50.039 +04:00 [DBG] Connection id "0HNEJ5OF454K8" accepted.
2025-08-04 12:09:50.039 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:09:50.041 +04:00 [DBG] Connection id "0HNEJ5OF454K8" started.
2025-08-04 12:09:50.045 +04:00 [DBG] Connection id "0HNEJ5OF454K7" stopped.
2025-08-04 12:09:50.046 +04:00 [DBG] Connection id "0HNEJ5OF454K7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:09:50.049 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:09:50.056 +04:00 [DBG] Connection id "0HNEJ5OF454K8" stopped.
2025-08-04 12:09:50.058 +04:00 [DBG] Connection id "0HNEJ5OF454K8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:09:50.061 +04:00 [DBG] Connection id "0HNEJ5OF454K9" accepted.
2025-08-04 12:09:50.062 +04:00 [DBG] Connection id "0HNEJ5OF454K9" started.
2025-08-04 12:09:50.063 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:09:50.071 +04:00 [DBG] Connection id "0HNEJ5OF454K9" stopped.
2025-08-04 12:09:50.073 +04:00 [DBG] Connection id "0HNEJ5OF454K9" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:09:50.836 +04:00 [DBG] Connection id "0HNEJ5OF454KA" accepted.
2025-08-04 12:09:50.839 +04:00 [DBG] Connection id "0HNEJ5OF454KA" started.
2025-08-04 12:09:50.846 +04:00 [DBG] Connection 0HNEJ5OF454KA established using the following protocol: "Tls13"
2025-08-04 12:09:51.155 +04:00 [DBG] Connection id "0HNEJ5OF454KA" received FIN.
2025-08-04 12:09:51.156 +04:00 [DBG] Connection id "0HNEJ5OF454KA" is closed. The last processed stream ID was 0.
2025-08-04 12:09:51.157 +04:00 [DBG] The connection queue processing loop for 0HNEJ5OF454KA completed.
2025-08-04 12:09:51.158 +04:00 [DBG] Connection id "0HNEJ5OF454KA" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:09:51.171 +04:00 [DBG] Connection id "0HNEJ5OF454KA" stopped.
2025-08-04 12:09:56.393 +04:00 [INF] Application is shutting down...
2025-08-04 12:09:56.394 +04:00 [DBG] Hosting stopping
2025-08-04 12:09:56.442 +04:00 [DBG] Hosting stopped
2025-08-04 12:10:02.355 +04:00 [INF] Starting web host
2025-08-04 12:10:02.740 +04:00 [INF] Options were configured
2025-08-04 12:10:02.750 +04:00 [INF] Infrastructure services registered
2025-08-04 12:10:02.775 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 12:10:03.782 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 12:10:04.585 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 12:10:04.803 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 12:10:04.806 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:10:04.809 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:10:04.813 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:10:04.817 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:10:04.981 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 12:10:05.102 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:10:05.128 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:10:05.182 +04:00 [DBG] Created DbConnection. (50ms).
2025-08-04 12:10:05.190 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.426 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.439 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 12:10:05.451 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (9ms).
2025-08-04 12:10:05.455 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (19ms).
2025-08-04 12:10:05.466 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:10:05.528 +04:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:10:05.535 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.546 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (6ms).
2025-08-04 12:10:05.555 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 12:10:05.557 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (2ms).
2025-08-04 12:10:05.559 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (3ms).
2025-08-04 12:10:05.561 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.564 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.568 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:10:05.623 +04:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:10:05.626 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.628 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:10:05.634 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:10:05.637 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:05.640 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:10:05.692 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 12:10:05.731 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 12:10:05.774 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 12:10:06.084 +04:00 [INF] Registered 30 endpoints in 3,292 milliseconds.
2025-08-04 12:10:06.226 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:10:06.276 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 12:10:06.562 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 12:10:06.609 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:10:06.611 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:10:06.613 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:06.616 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:06.618 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:10:06.620 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-04 12:10:06.621 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-08-04 12:10:06.624 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:10:06.633 +04:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:10:06.649 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:06.653 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 14ms reading results.
2025-08-04 12:10:06.655 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:06.656 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:10:06.658 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:10:06.660 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:06.661 +04:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-08-04 12:10:06.667 +04:00 [DBG] Hosting starting
2025-08-04 12:10:06.687 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 12:10:06.817 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 12:10:06.823 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 12:10:06.832 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 12:10:06.839 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 12:10:06.862 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 12:10:06.869 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:10:06.872 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:10:06.876 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:10:06.883 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:10:06.886 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:10:06.889 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-04 12:10:06.891 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:10:06.894 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:10:06.897 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:10:06.900 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:10:06.902 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:10:06.904 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 12:10:06.907 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 12:10:06.975 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 12:10:06.977 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 12:10:07.053 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 12:10:07.054 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 12:10:07.056 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 12:10:07.057 +04:00 [INF] Hosting environment: Development
2025-08-04 12:10:07.058 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 12:10:07.062 +04:00 [DBG] Hosting started
2025-08-04 12:10:12.153 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" accepted.
2025-08-04 12:10:12.155 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" started.
2025-08-04 12:10:12.188 +04:00 [DBG] Connection 0HNEJ5PB07U2G established using the following protocol: "Tls13"
2025-08-04 12:10:12.232 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/health - null null
2025-08-04 12:10:12.291 +04:00 [DBG] 1 candidate(s) found for the request path '/health'
2025-08-04 12:10:12.294 +04:00 [DBG] Request matched endpoint 'Health checks'
2025-08-04 12:10:12.322 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:10:12.341 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:10:12.346 +04:00 [INF] Executing endpoint 'Health checks'
2025-08-04 12:10:12.354 +04:00 [DBG] Running health checks
2025-08-04 12:10:12.359 +04:00 [DBG] Running health check Custom_Check
2025-08-04 12:10:12.367 +04:00 [DBG] Running health check External API
2025-08-04 12:10:12.367 +04:00 [DBG] Health check Custom_Check with status "Healthy" completed after 4.8319ms with message 'Ok'
2025-08-04 12:10:12.380 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/orders
2025-08-04 12:10:12.386 +04:00 [INF] Sending HTTP request GET https://localhost:57679/orders
2025-08-04 12:10:12.435 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" accepted.
2025-08-04 12:10:12.437 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" started.
2025-08-04 12:10:12.447 +04:00 [DBG] Connection 0HNEJ5PB07U2H established using the following protocol: "Tls13"
2025-08-04 12:10:12.463 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/orders - null null
2025-08-04 12:10:12.468 +04:00 [DBG] 1 candidate(s) found for the request path '/orders'
2025-08-04 12:10:12.470 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-08-04 12:10:12.472 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:10:12.474 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:10:12.476 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-08-04 12:10:12.601 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:10:12.631 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-08-04 12:10:12.678 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-08-04 12:10:12.684 +04:00 [DBG] Including navigation: 'Order.User'.
2025-08-04 12:10:12.860 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 12:10:12.898 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:10:12.900 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:10:12.904 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:12.907 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:12.909 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:10:12.911 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-04 12:10:12.914 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-08-04 12:10:12.917 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:10:12.952 +04:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:10:13.000 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.072 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.075 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.117 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.120 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.132 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.134 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.136 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.138 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.140 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.143 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.145 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.148 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.149 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.151 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.153 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.157 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.159 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.162 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.165 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.167 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.170 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.172 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.174 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.176 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.179 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.183 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.186 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.188 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.191 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.195 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.198 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.201 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.204 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.205 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.207 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.209 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.211 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.214 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.216 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.218 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.219 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.221 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.222 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.224 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.225 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.227 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.230 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.233 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.234 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.236 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.237 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.238 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.240 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.241 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.243 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.245 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.248 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.250 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.252 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:10:13.254 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:13.255 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 299ms reading results.
2025-08-04 12:10:13.256 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:13.258 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:10:13.301 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-08-04 12:10:13.479 +04:00 [INF] Received HTTP response headers after 1088.5245ms - 200
2025-08-04 12:10:13.479 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/orders   Responded with [200] in 996ms
2025-08-04 12:10:13.482 +04:00 [INF] End processing HTTP request after 1105.1591ms - 200
2025-08-04 12:10:13.483 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" completed keep alive response.
2025-08-04 12:10:13.485 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:10:13.485 +04:00 [DBG] Health check External API with status "Healthy" completed after 1117.8643ms with message 'null'
2025-08-04 12:10:13.488 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:10:13.491 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:10:13.494 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/orders - 200 12676 application/json 1030.017ms
2025-08-04 12:10:13.494 +04:00 [DBG] Health check processing with combined status "Healthy" completed after 1137.5839ms
2025-08-04 12:10:13.525 +04:00 [INF] Executed endpoint 'Health checks'
2025-08-04 12:10:13.530 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/health   Responded with [200] in 1194ms
2025-08-04 12:10:13.534 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/health - 200 503 application/json 1303.7632ms
2025-08-04 12:10:16.191 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" received FIN.
2025-08-04 12:10:16.194 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" is closed. The last processed stream ID was 1.
2025-08-04 12:10:16.194 +04:00 [DBG] The connection queue processing loop for 0HNEJ5PB07U2G completed.
2025-08-04 12:10:16.195 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:10:16.209 +04:00 [DBG] Connection id "0HNEJ5PB07U2G" stopped.
2025-08-04 12:11:23.424 +04:00 [INF] Application is shutting down...
2025-08-04 12:11:23.426 +04:00 [DBG] Hosting stopping
2025-08-04 12:11:23.435 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" disconnecting.
2025-08-04 12:11:23.437 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" stopped.
2025-08-04 12:11:23.438 +04:00 [DBG] Connection id "0HNEJ5PB07U2H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:11:23.480 +04:00 [DBG] Hosting stopped
2025-08-04 12:11:30.633 +04:00 [INF] Starting web host
2025-08-04 12:11:30.904 +04:00 [INF] Options were configured
2025-08-04 12:11:30.911 +04:00 [INF] Infrastructure services registered
2025-08-04 12:11:30.930 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 12:11:31.534 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 12:11:32.274 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 12:11:32.518 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 12:11:32.521 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:11:32.523 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:11:32.525 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:11:32.527 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:11:32.583 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 12:11:32.663 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:11:32.684 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:11:32.728 +04:00 [DBG] Created DbConnection. (42ms).
2025-08-04 12:11:32.736 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.020 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.039 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 12:11:33.048 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (10ms).
2025-08-04 12:11:33.052 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (18ms).
2025-08-04 12:11:33.063 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:11:33.132 +04:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:11:33.141 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.158 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (8ms).
2025-08-04 12:11:33.167 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 12:11:33.170 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (3ms).
2025-08-04 12:11:33.172 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (6ms).
2025-08-04 12:11:33.176 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.180 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.183 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:11:33.260 +04:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:11:33.263 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.265 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:11:33.272 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:11:33.277 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:33.280 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:11:33.348 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 12:11:33.390 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 12:11:33.439 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 12:11:33.753 +04:00 [INF] Registered 30 endpoints in 2,811 milliseconds.
2025-08-04 12:11:33.895 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:11:33.932 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 12:11:34.176 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 12:11:34.222 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:11:34.224 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:11:34.225 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:34.227 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:34.228 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:11:34.229 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-08-04 12:11:34.230 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:11:34.232 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:11:34.240 +04:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:11:34.255 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:34.260 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 14ms reading results.
2025-08-04 12:11:34.261 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:34.264 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 12:11:34.266 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:11:34.268 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:34.270 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:11:34.275 +04:00 [DBG] Hosting starting
2025-08-04 12:11:34.295 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 12:11:34.429 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 12:11:34.434 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 12:11:34.445 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 12:11:34.453 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 12:11:34.470 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 12:11:34.475 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:11:34.480 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:11:34.488 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:11:34.497 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:11:34.501 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:11:34.506 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-04 12:11:34.508 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:11:34.510 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:11:34.513 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:11:34.517 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:11:34.522 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:11:34.525 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 12:11:34.527 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 12:11:34.581 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 12:11:34.584 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 12:11:34.648 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 12:11:34.650 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 12:11:34.651 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 12:11:34.652 +04:00 [INF] Hosting environment: Development
2025-08-04 12:11:34.653 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 12:11:34.656 +04:00 [DBG] Hosting started
2025-08-04 12:11:34.728 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" accepted.
2025-08-04 12:11:34.738 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" started.
2025-08-04 12:11:34.769 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" accepted.
2025-08-04 12:11:34.773 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" started.
2025-08-04 12:11:34.788 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" received FIN.
2025-08-04 12:11:34.796 +04:00 [DBG] Connection 0HNEJ5Q3JNKJV established using the following protocol: "Tls13"
2025-08-04 12:11:34.796 +04:00 [DBG] Connection 0HNEJ5Q3JNKJU established using the following protocol: "Tls13"
2025-08-04 12:11:34.810 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" is closed. The last processed stream ID was 0.
2025-08-04 12:11:34.813 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:11:34.820 +04:00 [DBG] The connection queue processing loop for 0HNEJ5Q3JNKJU completed.
2025-08-04 12:11:34.827 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJU" stopped.
2025-08-04 12:11:34.857 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/health - null null
2025-08-04 12:11:34.945 +04:00 [DBG] 1 candidate(s) found for the request path '/health'
2025-08-04 12:11:34.947 +04:00 [DBG] Request matched endpoint 'Health checks'
2025-08-04 12:11:34.992 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:11:35.014 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:11:35.017 +04:00 [INF] Executing endpoint 'Health checks'
2025-08-04 12:11:35.025 +04:00 [DBG] Running health checks
2025-08-04 12:11:35.033 +04:00 [DBG] Running health check Custom_Check
2025-08-04 12:11:35.042 +04:00 [DBG] Running health check User API
2025-08-04 12:11:35.042 +04:00 [DBG] Running health check Order API
2025-08-04 12:11:35.047 +04:00 [DBG] Health check Custom_Check with status "Healthy" completed after 8.9097ms with message 'Ok'
2025-08-04 12:11:35.058 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/users
2025-08-04 12:11:35.058 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/orders
2025-08-04 12:11:35.065 +04:00 [INF] Sending HTTP request GET https://localhost:57679/users
2025-08-04 12:11:35.065 +04:00 [INF] Sending HTTP request GET https://localhost:57679/orders
2025-08-04 12:11:35.138 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" accepted.
2025-08-04 12:11:35.149 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" started.
2025-08-04 12:11:35.149 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" accepted.
2025-08-04 12:11:35.151 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" started.
2025-08-04 12:11:35.155 +04:00 [DBG] Connection 0HNEJ5Q3JNKK0 established using the following protocol: "Tls13"
2025-08-04 12:11:35.157 +04:00 [DBG] Connection 0HNEJ5Q3JNKK1 established using the following protocol: "Tls13"
2025-08-04 12:11:35.167 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/users - null null
2025-08-04 12:11:35.167 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/orders - null null
2025-08-04 12:11:35.173 +04:00 [DBG] 1 candidate(s) found for the request path '/users'
2025-08-04 12:11:35.173 +04:00 [DBG] 1 candidate(s) found for the request path '/orders'
2025-08-04 12:11:35.174 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-08-04 12:11:35.175 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-08-04 12:11:35.176 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:11:35.177 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:11:35.178 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:11:35.179 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:11:35.179 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-08-04 12:11:35.180 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-08-04 12:11:35.283 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:11:35.283 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:11:35.300 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-08-04 12:11:35.300 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Roles)'
2025-08-04 12:11:35.318 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-08-04 12:11:35.319 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-08-04 12:11:35.322 +04:00 [DBG] Including navigation: 'Order.User'.
2025-08-04 12:11:35.423 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 12:11:35.432 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (User)(resultContext.Values[0]), 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            selfIdentifier: (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }, 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                UserRole entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    UserRole instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(UserRole);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (UserRole)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                {
                                    shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                    return 
                                    {
                                        UserRole instance;
                                        instance = new UserRole();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                        instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserRole)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{8}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (User)(resultContext.Values[0]) : default(User);
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 12:11:35.469 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:11:35.470 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:11:35.472 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:11:35.473 +04:00 [DBG] Created DbConnection. (2ms).
2025-08-04 12:11:35.474 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.475 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.479 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.483 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:11:35.485 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:11:35.488 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-08-04 12:11:35.489 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:11:35.490 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.494 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:11:35.497 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:11:35.499 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-08-04 12:11:35.502 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 12:11:35.507 +04:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:11:35.514 +04:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 12:11:35.564 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.573 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.613 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.617 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.629 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.638 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 120ms reading results.
2025-08-04 12:11:35.643 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:35.651 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (7ms).
2025-08-04 12:11:35.678 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.683 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.711 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.739 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.747 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.751 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.755 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-08-04 12:11:35.758 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.775 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.778 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.822 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.824 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.833 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.839 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.842 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.848 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.851 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.856 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.865 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.869 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.872 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.876 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.891 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.893 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.898 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.902 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.911 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.920 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.923 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.925 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.928 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.930 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.934 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.937 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.940 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.942 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.943 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.948 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.954 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.957 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:35.961 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.053 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.101 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.103 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.105 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.108 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.111 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.113 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.139 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.147 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.151 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.153 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.157 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.160 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.162 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.165 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.169 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.173 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.176 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.177 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:11:36.182 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:36.188 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 678ms reading results.
2025-08-04 12:11:36.191 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:36.196 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (5ms).
2025-08-04 12:11:36.212 +04:00 [INF] Received HTTP response headers after 1139.9268ms - 200
2025-08-04 12:11:36.214 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/users   Responded with [200] in 1015ms
2025-08-04 12:11:36.217 +04:00 [INF] End processing HTTP request after 1159.9357ms - 200
2025-08-04 12:11:36.222 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" completed keep alive response.
2025-08-04 12:11:36.226 +04:00 [DBG] Health check User API with status "Healthy" completed after 1183.4515ms with message 'null'
2025-08-04 12:11:36.226 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:11:36.234 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:36.237 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:11:36.240 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/users - 200 454 application/json 1071.7384ms
2025-08-04 12:11:36.244 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-08-04 12:11:36.277 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/orders   Responded with [200] in 1097ms
2025-08-04 12:11:36.279 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" completed keep alive response.
2025-08-04 12:11:36.279 +04:00 [INF] Received HTTP response headers after 1206.8979ms - 200
2025-08-04 12:11:36.280 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:11:36.285 +04:00 [INF] End processing HTTP request after 1228.358ms - 200
2025-08-04 12:11:36.287 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:11:36.289 +04:00 [DBG] Health check Order API with status "Healthy" completed after 1247.0298ms with message 'null'
2025-08-04 12:11:36.290 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:11:36.294 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/orders - 200 12676 application/json 1126.7255ms
2025-08-04 12:11:36.303 +04:00 [DBG] Health check processing with combined status "Healthy" completed after 1271.0505ms
2025-08-04 12:11:36.341 +04:00 [INF] Executed endpoint 'Health checks'
2025-08-04 12:11:36.351 +04:00 [INF] Source:[127.0.0.1] Request: GET https localhost:57679/health   Responded with [200] in 1339ms
2025-08-04 12:11:36.355 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/health - 200 643 application/json 1500.7945ms
2025-08-04 12:11:46.314 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" received FIN.
2025-08-04 12:11:46.316 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" is closed. The last processed stream ID was 1.
2025-08-04 12:11:46.316 +04:00 [DBG] The connection queue processing loop for 0HNEJ5Q3JNKJV completed.
2025-08-04 12:11:46.318 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:11:46.329 +04:00 [DBG] Connection id "0HNEJ5Q3JNKJV" stopped.
2025-08-04 12:12:50.183 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" received FIN.
2025-08-04 12:12:50.183 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" received FIN.
2025-08-04 12:12:50.185 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:12:50.186 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" disconnecting.
2025-08-04 12:12:50.187 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" disconnecting.
2025-08-04 12:12:50.188 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:12:50.197 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK1" stopped.
2025-08-04 12:12:50.197 +04:00 [DBG] Connection id "0HNEJ5Q3JNKK0" stopped.
2025-08-04 12:13:35.076 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'Order API'
2025-08-04 12:13:35.076 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'User API'
2025-08-04 12:13:45.084 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:13:45.088 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0953ms - processed: 0 items - remaining: 2 items
2025-08-04 12:13:55.097 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:13:55.099 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0195ms - processed: 0 items - remaining: 2 items
2025-08-04 12:14:05.106 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:14:05.107 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0054ms - processed: 0 items - remaining: 2 items
2025-08-04 12:14:12.729 +04:00 [INF] Application is shutting down...
2025-08-04 12:14:12.730 +04:00 [DBG] Hosting stopping
2025-08-04 12:14:12.768 +04:00 [DBG] Hosting stopped
2025-08-04 12:15:14.651 +04:00 [INF] Starting web host
2025-08-04 12:15:15.200 +04:00 [INF] Options were configured
2025-08-04 12:15:15.208 +04:00 [INF] Infrastructure services registered
2025-08-04 12:15:15.241 +04:00 [INF] Mediatr and Email Sender services registered
2025-08-04 12:15:16.353 +04:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-08-04 12:15:17.434 +04:00 [WRN] There are multiple relationships between 'LoggedOrder' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'LoggedOrder' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2025-08-04 12:15:17.658 +04:00 [DBG] The property 'PhoneNumber.ContributorId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-08-04 12:15:17.661 +04:00 [WRN] The foreign key property 'LoggedOrder.CreatedUserId1' was created in shadow state because a conflicting property with the simple name 'CreatedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:15:17.664 +04:00 [WRN] The foreign key property 'LoggedOrder.DeletedUserId1' was created in shadow state because a conflicting property with the simple name 'DeletedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:15:17.666 +04:00 [WRN] The foreign key property 'LoggedOrder.ModifiedUserId1' was created in shadow state because a conflicting property with the simple name 'ModifiedUserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:15:17.668 +04:00 [WRN] The foreign key property 'UserRole.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2025-08-04 12:15:17.754 +04:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Product'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-04 12:15:17.854 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:15:17.888 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:15:17.947 +04:00 [DBG] Created DbConnection. (58ms).
2025-08-04 12:15:17.953 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:18.215 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:18.229 +04:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-08-04 12:15:18.243 +04:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (12ms).
2025-08-04 12:15:18.247 +04:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (22ms).
2025-08-04 12:15:18.258 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:15:18.343 +04:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-04 12:15:18.351 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:18.368 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (11ms).
2025-08-04 12:15:18.409 +04:00 [DBG] Creating DbCommand for 'ExecuteScalar'.
2025-08-04 12:15:18.575 +04:00 [DBG] Created DbCommand for 'ExecuteScalar' (165ms).
2025-08-04 12:15:18.814 +04:00 [DBG] Initialized DbCommand for 'ExecuteScalar' (404ms).
2025-08-04 12:15:18.892 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:18.925 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:19.047 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:15:19.289 +04:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2025-08-04 12:15:19.296 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:19.298 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 12:15:19.313 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:15:19.319 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:19.324 +04:00 [DBG] Disposed connection to database '' on server '' (4ms).
2025-08-04 12:15:19.456 +04:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-08-04 12:15:19.586 +04:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-04 12:15:19.929 +04:00 [DBG] Registered SignalR Protocol: json, implemented by Microsoft.AspNetCore.SignalR.Protocol.JsonHubProtocol.
2025-08-04 12:15:20.465 +04:00 [INF] Registered 30 endpoints in 5,211 milliseconds.
2025-08-04 12:15:20.644 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:15:20.697 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Any()'
2025-08-04 12:15:20.978 +04:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Users AS u), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: OrderApp.Infrastructure.Data.AppDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-08-04 12:15:21.032 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:15:21.033 +04:00 [DBG] Created DbConnection. (1ms).
2025-08-04 12:15:21.035 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:21.037 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:21.040 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:15:21.042 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:15:21.044 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-08-04 12:15:21.046 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:15:21.065 +04:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-04 12:15:21.092 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:21.096 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 24ms reading results.
2025-08-04 12:15:21.099 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:21.101 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 12:15:21.104 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:15:21.108 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:15:21.112 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:15:21.124 +04:00 [DBG] Hosting starting
2025-08-04 12:15:21.190 +04:00 [INF] User profile is available. Using 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-08-04 12:15:21.331 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-96abcfc1-a88e-4936-885f-a725baea972b.xml'.
2025-08-04 12:15:21.336 +04:00 [DBG] Reading data from file 'C:\Users\zakir\AppData\Local\ASP.NET\DataProtection-Keys\key-d76fcede-8a6f-46d5-9032-13cac50778bc.xml'.
2025-08-04 12:15:21.346 +04:00 [DBG] Found key {96abcfc1-a88e-4936-885f-a725baea972b}.
2025-08-04 12:15:21.357 +04:00 [DBG] Found key {d76fcede-8a6f-46d5-9032-13cac50778bc}.
2025-08-04 12:15:21.369 +04:00 [DBG] Considering key {d76fcede-8a6f-46d5-9032-13cac50778bc} with expiration date 2025-08-04 16:06:59Z as default key.
2025-08-04 12:15:21.377 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:15:21.384 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:15:21.390 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:15:21.397 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:15:21.401 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:15:21.405 +04:00 [DBG] Considering key {96abcfc1-a88e-4936-885f-a725baea972b} with expiration date 2025-11-02 07:15:08Z as default key.
2025-08-04 12:15:21.408 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:15:21.410 +04:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-08-04 12:15:21.412 +04:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-08-04 12:15:21.414 +04:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-08-04 12:15:21.416 +04:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-08-04 12:15:21.417 +04:00 [DBG] Using key {d76fcede-8a6f-46d5-9032-13cac50778bc} as the default key.
2025-08-04 12:15:21.419 +04:00 [DBG] Key ring with default key {d76fcede-8a6f-46d5-9032-13cac50778bc} was loaded during application startup.
2025-08-04 12:15:21.484 +04:00 [DBG] Middleware configuration started with options: {AllowedHosts = *, AllowEmptyHosts = True, IncludeFailureMessage = True}
2025-08-04 12:15:21.486 +04:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-08-04 12:15:21.577 +04:00 [INF] Now listening on: https://localhost:57679
2025-08-04 12:15:21.578 +04:00 [DBG] Loaded hosting startup assembly OrderApp.Web
2025-08-04 12:15:21.580 +04:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-04 12:15:21.581 +04:00 [INF] Hosting environment: Development
2025-08-04 12:15:21.582 +04:00 [INF] Content root path: E:\Work\OrderApp\src\OrderApp.Web
2025-08-04 12:15:21.585 +04:00 [DBG] Hosting started
2025-08-04 12:21:03.782 +04:00 [DBG] Connection id "0HNEJ5VD6K001" accepted.
2025-08-04 12:21:03.809 +04:00 [DBG] Connection id "0HNEJ5VD6K001" started.
2025-08-04 12:21:03.810 +04:00 [DBG] Connection id "0HNEJ5VD6K002" accepted.
2025-08-04 12:21:03.814 +04:00 [DBG] Connection id "0HNEJ5VD6K002" started.
2025-08-04 12:21:03.836 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:03.868 +04:00 [DBG] Connection id "0HNEJ5VD6K001" stopped.
2025-08-04 12:21:03.872 +04:00 [DBG] Connection id "0HNEJ5VD6K001" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:04.967 +04:00 [DBG] Connection id "0HNEJ5VD6K003" accepted.
2025-08-04 12:21:04.969 +04:00 [DBG] Connection id "0HNEJ5VD6K003" started.
2025-08-04 12:21:04.970 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:04.976 +04:00 [DBG] Connection id "0HNEJ5VD6K002" stopped.
2025-08-04 12:21:04.978 +04:00 [DBG] Connection id "0HNEJ5VD6K002" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:04.984 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:04.987 +04:00 [DBG] Connection id "0HNEJ5VD6K003" stopped.
2025-08-04 12:21:04.989 +04:00 [DBG] Connection id "0HNEJ5VD6K003" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:04.994 +04:00 [DBG] Connection id "0HNEJ5VD6K004" accepted.
2025-08-04 12:21:04.996 +04:00 [DBG] Connection id "0HNEJ5VD6K004" started.
2025-08-04 12:21:04.998 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:05.002 +04:00 [DBG] Connection id "0HNEJ5VD6K004" stopped.
2025-08-04 12:21:05.004 +04:00 [DBG] Connection id "0HNEJ5VD6K004" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:11.296 +04:00 [DBG] Connection id "0HNEJ5VD6K005" accepted.
2025-08-04 12:21:11.298 +04:00 [DBG] Connection id "0HNEJ5VD6K005" started.
2025-08-04 12:21:11.300 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:11.303 +04:00 [DBG] Connection id "0HNEJ5VD6K006" accepted.
2025-08-04 12:21:11.305 +04:00 [DBG] Connection id "0HNEJ5VD6K005" stopped.
2025-08-04 12:21:11.305 +04:00 [DBG] Connection id "0HNEJ5VD6K006" started.
2025-08-04 12:21:11.307 +04:00 [DBG] Connection id "0HNEJ5VD6K005" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:12.365 +04:00 [DBG] Connection id "0HNEJ5VD6K007" accepted.
2025-08-04 12:21:12.366 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:12.371 +04:00 [DBG] Connection id "0HNEJ5VD6K007" started.
2025-08-04 12:21:12.381 +04:00 [DBG] Connection id "0HNEJ5VD6K006" stopped.
2025-08-04 12:21:12.387 +04:00 [DBG] Connection id "0HNEJ5VD6K006" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:12.393 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:12.399 +04:00 [DBG] Connection id "0HNEJ5VD6K007" stopped.
2025-08-04 12:21:12.401 +04:00 [DBG] Connection id "0HNEJ5VD6K007" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:12.405 +04:00 [DBG] Connection id "0HNEJ5VD6K008" accepted.
2025-08-04 12:21:12.408 +04:00 [DBG] Connection id "0HNEJ5VD6K008" started.
2025-08-04 12:21:12.411 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:12.417 +04:00 [DBG] Connection id "0HNEJ5VD6K008" stopped.
2025-08-04 12:21:12.419 +04:00 [DBG] Connection id "0HNEJ5VD6K008" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:15.289 +04:00 [DBG] Connection id "0HNEJ5VD6K009" accepted.
2025-08-04 12:21:15.290 +04:00 [DBG] Connection id "0HNEJ5VD6K009" started.
2025-08-04 12:21:15.291 +04:00 [DBG] Connection id "0HNEJ5VD6K00A" accepted.
2025-08-04 12:21:15.292 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:15.293 +04:00 [DBG] Connection id "0HNEJ5VD6K00A" started.
2025-08-04 12:21:15.295 +04:00 [DBG] Connection id "0HNEJ5VD6K009" stopped.
2025-08-04 12:21:15.297 +04:00 [DBG] Connection id "0HNEJ5VD6K009" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:16.328 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:16.329 +04:00 [DBG] Connection id "0HNEJ5VD6K00B" accepted.
2025-08-04 12:21:16.336 +04:00 [DBG] Connection id "0HNEJ5VD6K00A" stopped.
2025-08-04 12:21:16.338 +04:00 [DBG] Connection id "0HNEJ5VD6K00B" started.
2025-08-04 12:21:16.340 +04:00 [DBG] Connection id "0HNEJ5VD6K00A" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:16.346 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:16.351 +04:00 [DBG] Connection id "0HNEJ5VD6K00B" stopped.
2025-08-04 12:21:16.352 +04:00 [DBG] Connection id "0HNEJ5VD6K00B" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:16.355 +04:00 [DBG] Connection id "0HNEJ5VD6K00C" accepted.
2025-08-04 12:21:16.357 +04:00 [DBG] Connection id "0HNEJ5VD6K00C" started.
2025-08-04 12:21:16.360 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:16.364 +04:00 [DBG] Connection id "0HNEJ5VD6K00C" stopped.
2025-08-04 12:21:16.366 +04:00 [DBG] Connection id "0HNEJ5VD6K00C" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:17.202 +04:00 [DBG] Connection id "0HNEJ5VD6K00D" accepted.
2025-08-04 12:21:17.203 +04:00 [DBG] Connection id "0HNEJ5VD6K00D" started.
2025-08-04 12:21:17.203 +04:00 [DBG] Connection id "0HNEJ5VD6K00E" accepted.
2025-08-04 12:21:17.204 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:17.205 +04:00 [DBG] Connection id "0HNEJ5VD6K00E" started.
2025-08-04 12:21:17.209 +04:00 [DBG] Connection id "0HNEJ5VD6K00D" stopped.
2025-08-04 12:21:17.210 +04:00 [DBG] Connection id "0HNEJ5VD6K00D" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:18.233 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:18.233 +04:00 [DBG] Connection id "0HNEJ5VD6K00F" accepted.
2025-08-04 12:21:18.237 +04:00 [DBG] Connection id "0HNEJ5VD6K00E" stopped.
2025-08-04 12:21:18.240 +04:00 [DBG] Connection id "0HNEJ5VD6K00F" started.
2025-08-04 12:21:18.242 +04:00 [DBG] Connection id "0HNEJ5VD6K00E" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:18.245 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:18.251 +04:00 [DBG] Connection id "0HNEJ5VD6K00F" stopped.
2025-08-04 12:21:18.252 +04:00 [DBG] Connection id "0HNEJ5VD6K00F" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:18.254 +04:00 [DBG] Connection id "0HNEJ5VD6K00G" accepted.
2025-08-04 12:21:18.256 +04:00 [DBG] Connection id "0HNEJ5VD6K00G" started.
2025-08-04 12:21:18.258 +04:00 [DBG] Failed to authenticate HTTPS connection.
System.Security.Authentication.AuthenticationException: Cannot determine the frame size or a corrupted frame was received.
   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)
   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-08-04 12:21:18.264 +04:00 [DBG] Connection id "0HNEJ5VD6K00G" stopped.
2025-08-04 12:21:18.265 +04:00 [DBG] Connection id "0HNEJ5VD6K00G" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:23.155 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" accepted.
2025-08-04 12:21:23.156 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" started.
2025-08-04 12:21:23.232 +04:00 [DBG] Connection 0HNEJ5VD6K00H established using the following protocol: "Tls13"
2025-08-04 12:21:26.537 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/metrics - null null
2025-08-04 12:21:26.691 +04:00 [DBG] 1 candidate(s) found for the request path '/metrics'
2025-08-04 12:21:26.694 +04:00 [DBG] Request matched endpoint '/metrics'
2025-08-04 12:21:26.758 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:21:26.777 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:21:26.779 +04:00 [INF] Executing endpoint '/metrics'
2025-08-04 12:21:26.822 +04:00 [INF] Executed endpoint '/metrics'
2025-08-04 12:21:27.066 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/metrics   Responded with [200] in 296ms
2025-08-04 12:21:27.074 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/metrics - 200 23803 application/json 560.7644ms
2025-08-04 12:21:27.077 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" received FIN.
2025-08-04 12:21:27.082 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" is closed. The last processed stream ID was 1.
2025-08-04 12:21:27.084 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:27.089 +04:00 [DBG] The connection queue processing loop for 0HNEJ5VD6K00H completed.
2025-08-04 12:21:27.091 +04:00 [DBG] Connection id "0HNEJ5VD6K00H" stopped.
2025-08-04 12:21:39.083 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" accepted.
2025-08-04 12:21:39.084 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" started.
2025-08-04 12:21:39.090 +04:00 [DBG] Connection 0HNEJ5VD6K00I established using the following protocol: "Tls13"
2025-08-04 12:21:39.095 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/metrics - null null
2025-08-04 12:21:39.101 +04:00 [DBG] 1 candidate(s) found for the request path '/metrics'
2025-08-04 12:21:39.102 +04:00 [DBG] Request matched endpoint '/metrics'
2025-08-04 12:21:39.104 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:21:39.107 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:21:39.110 +04:00 [INF] Executing endpoint '/metrics'
2025-08-04 12:21:39.112 +04:00 [INF] Executed endpoint '/metrics'
2025-08-04 12:21:39.115 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/metrics   Responded with [200] in 8ms
2025-08-04 12:21:39.118 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/metrics - 200 33801 application/json 22.9953ms
2025-08-04 12:21:42.084 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" received FIN.
2025-08-04 12:21:42.085 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" is closed. The last processed stream ID was 1.
2025-08-04 12:21:42.086 +04:00 [DBG] The connection queue processing loop for 0HNEJ5VD6K00I completed.
2025-08-04 12:21:42.087 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:21:42.098 +04:00 [DBG] Connection id "0HNEJ5VD6K00I" stopped.
2025-08-04 12:31:06.137 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" accepted.
2025-08-04 12:31:06.141 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" started.
2025-08-04 12:31:06.159 +04:00 [DBG] Connection 0HNEJ5VD6K00J established using the following protocol: "Tls13"
2025-08-04 12:31:06.172 +04:00 [INF] Request starting HTTP/2 GET https://localhost:57679/health - null null
2025-08-04 12:31:06.176 +04:00 [DBG] 1 candidate(s) found for the request path '/health'
2025-08-04 12:31:06.177 +04:00 [DBG] Request matched endpoint 'Health checks'
2025-08-04 12:31:06.182 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:31:06.186 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:31:06.188 +04:00 [INF] Executing endpoint 'Health checks'
2025-08-04 12:31:06.212 +04:00 [DBG] Running health checks
2025-08-04 12:31:06.225 +04:00 [DBG] Running health check Custom_Check
2025-08-04 12:31:06.241 +04:00 [DBG] Health check Custom_Check with status "Healthy" completed after 8.8902ms with message 'Ok'
2025-08-04 12:31:06.251 +04:00 [DBG] Running health check User API
2025-08-04 12:31:06.251 +04:00 [DBG] Running health check Order API
2025-08-04 12:31:06.273 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/orders
2025-08-04 12:31:06.273 +04:00 [INF] Start processing HTTP request GET https://localhost:57679/users
2025-08-04 12:31:06.281 +04:00 [INF] Sending HTTP request GET https://localhost:57679/orders
2025-08-04 12:31:06.283 +04:00 [INF] Sending HTTP request GET https://localhost:57679/users
2025-08-04 12:31:06.357 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" accepted.
2025-08-04 12:31:06.358 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" started.
2025-08-04 12:31:06.358 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" accepted.
2025-08-04 12:31:06.361 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" started.
2025-08-04 12:31:06.366 +04:00 [DBG] Connection 0HNEJ5VD6K00L established using the following protocol: "Tls13"
2025-08-04 12:31:06.366 +04:00 [DBG] Connection 0HNEJ5VD6K00K established using the following protocol: "Tls13"
2025-08-04 12:31:06.392 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/orders - null null
2025-08-04 12:31:06.392 +04:00 [INF] Request starting HTTP/1.1 GET https://localhost:57679/users - null null
2025-08-04 12:31:06.395 +04:00 [DBG] 1 candidate(s) found for the request path '/orders'
2025-08-04 12:31:06.397 +04:00 [DBG] 1 candidate(s) found for the request path '/users'
2025-08-04 12:31:06.398 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Orders'
2025-08-04 12:31:06.399 +04:00 [DBG] Request matched endpoint 'HTTP: GET /Users'
2025-08-04 12:31:06.400 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:31:06.401 +04:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-08-04 12:31:06.402 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:31:06.403 +04:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-08-04 12:31:06.404 +04:00 [INF] Executing endpoint 'HTTP: GET /Orders'
2025-08-04 12:31:06.405 +04:00 [INF] Executing endpoint 'HTTP: GET /Users'
2025-08-04 12:31:06.601 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:31:06.601 +04:00 [DBG] Entity Framework Core 9.0.6 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.0' with options: EngineType=SqlServer 
2025-08-04 12:31:06.635 +04:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .Include(u => u.Roles)'
2025-08-04 12:31:06.635 +04:00 [DBG] Compiling query expression: 
'DbSet<Order>()
    .Include(o => o.Product)
    .Include(o => o.User)'
2025-08-04 12:31:06.657 +04:00 [DBG] Including navigation: 'User.Roles'.
2025-08-04 12:31:06.659 +04:00 [DBG] Including navigation: 'Order.Product'.
2025-08-04 12:31:06.663 +04:00 [DBG] Including navigation: 'Order.User'.
2025-08-04 12:31:06.809 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Order>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Order.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Order.CreatedAt (DateTime) Required, 1], [Property: Order.CreatedUserId (int) Required FK Index, 2], [Property: Order.DeletedAt (DateTime?), 3], [Property: Order.DeletedUserId (int?) FK Index, 4], [Property: Order.IsDeleted (bool) Required, 5], [Property: Order.ModifiedAt (DateTime?), 6], [Property: Order.ModifiedUserId (int?) FK Index, 7], [Property: Order.OrderDate (DateTime) Required, 8], [Property: Order.ProductId (int) Required FK Index, 9], [Property: Order.RestoredAt (DateTime?), 10], [Property: Order.RestoredUserId (int?) FK Index, 11], [Property: Order.UserId (int) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: Product.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: Product.CompanyId (int) Required FK Index, 14], [Property: Product.Name (string) Required, 15], [Property: Product.Price (decimal) Required, 16] }
            2 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: User.Email (string) Required, 18], [Property: User.Name (string) Required, 19], [Property: User.Password (string) Required, 20] }
        SELECT o.Id, o.CreatedAt, o.CreatedUserId, o.DeletedAt, o.DeletedUserId, o.IsDeleted, o.ModifiedAt, o.ModifiedUserId, o.OrderDate, o.ProductId, o.RestoredAt, o.RestoredUserId, o.UserId, p.Id, p.CompanyId, p.Name, p.Price, u.Id, u.Email, u.Name, u.Password
        FROM Orders AS o
        INNER JOIN Products AS p ON o.ProductId == p.Id
        INNER JOIN Users AS u ON o.UserId == u.Id
        WHERE o.IsDeleted == CAST(0 AS bit), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Order entity;
        Product entity;
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Order instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Order);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Order.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Order)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]: 
                        {
                            return 
                            {
                                Order instance;
                                instance = new Order();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(1);
                                instance.<CreatedUserId>k__BackingField = dataReader.GetInt32(2);
                                instance.<DeletedAt>k__BackingField = dataReader.IsDBNull(3) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(3);
                                instance.<DeletedUserId>k__BackingField = dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(5);
                                instance.<ModifiedAt>k__BackingField = dataReader.IsDBNull(6) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(6);
                                instance.<ModifiedUserId>k__BackingField = dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(8);
                                instance.<ProductId>k__BackingField = dataReader.GetInt32(9);
                                instance.<RestoredAt>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                instance.<RestoredUserId>k__BackingField = dataReader.IsDBNull(11) ? default(int?) : (int?)dataReader.GetInt32(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Order | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Order)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Product instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Product);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Product.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Product)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]: 
                        {
                            return 
                            {
                                Product instance;
                                instance = new Product();
                                instance.<Id>k__BackingField = dataReader.GetInt32(13);
                                instance.<CompanyId>k__BackingField = dataReader.GetInt32(14);
                                instance.<Name>k__BackingField = dataReader.GetString(15);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(16);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Product | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.ProductAggregate.Product")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Product)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            User instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(User);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(17) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (User)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(17);
                                instance.<Email>k__BackingField = dataReader.GetString(18);
                                instance.<Name>k__BackingField = dataReader.GetString(19);
                                instance.<Password>k__BackingField = dataReader.GetString(20);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, Product>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.Product (Product) ToPrincipal Product | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("Product")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{10}, namelessParameter{11}) => 
            {
                return namelessParameter{10}.<Product>k__BackingField = namelessParameter{11};
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Order, Order, User>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Order.User (User) ToPrincipal User | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("OrderApp.Core.OrderAggregate.Order").FindNavigation("User")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{13}, namelessParameter{14}) => 
            {
                return namelessParameter{13}.<User>k__BackingField = namelessParameter{14};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 12:31:06.817 +04:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Email (string) Required, 1], [Property: User.Name (string) Required, 2], [Property: User.Password (string) Required, 3] }
            1 -> 0
            2 -> Dictionary<IProperty, int> { [Property: UserRole.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 4], [Property: UserRole.RoleId (int) Required FK Index, 5], [Property: UserRole.UserId (int) Required FK Index, 6], [Property: UserRole.UserId1 (no field, int?) Shadow FK Index, 7] }
            3 -> 4
        SELECT u.Id, u.Email, u.Name, u.Password, u0.Id, u0.RoleId, u0.UserId, u0.UserId1
        FROM Users AS u
        LEFT JOIN UserRoles AS u0 ON u.Id == u0.UserId
        ORDER BY u.Id ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        resultContext.Values == null ? 
        {
            User entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                User instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(User);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (User)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]: 
                            {
                                return 
                                {
                                    User instance;
                                    instance = new User();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<Password>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(User)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            resultContext.Values = new object[]{ entity };
            ShaperProcessingExpressionVisitor.InitializeIncludeCollection<User, User>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                entity: (User)(resultContext.Values[0]), 
                parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
                navigation: [LIFTABLE Constant: Navigation: User.Roles (List<UserRole>) Collection ToDependent UserRole | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles")], 
                clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()], 
                trackingQuery: True, 
                setLoaded: True);
        } : default(void);
        ShaperProcessingExpressionVisitor.PopulateIncludeCollection<User, UserRole>(
            collectionId: 0, 
            queryContext: queryContext, 
            dbDataReader: dataReader, 
            resultCoordinator: resultCoordinator, 
            parentIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            outerIdentifier: (queryContext, dataReader) => new object[]{ (object)(int?)dataReader.GetInt32(0) }, 
            selfIdentifier: (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(4) ? default(int?) : (int?)dataReader.GetInt32(4) }, 
            parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
            innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
            {
                UserRole entity;
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    UserRole instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(UserRole);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: UserRole.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole").FindPrimaryKey()], 
                        keyValues: new object[]{ dataReader.IsDBNull(4) ? default(object) : (object)dataReader.GetInt32(4) }, 
                        throwOnNullKey: False, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (UserRole)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]: 
                                {
                                    shadowSnapshot2 = (ISnapshot)new Snapshot<int?>(dataReader.IsDBNull(7) ? default(int?) : (int?)dataReader.GetInt32(7));
                                    return 
                                    {
                                        UserRole instance;
                                        instance = new UserRole();
                                        instance.<Id>k__BackingField = dataReader.IsDBNull(4) ? default(int) : dataReader.GetInt32(4);
                                        instance.<RoleId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                        instance.<UserId>k__BackingField = dataReader.IsDBNull(6) ? default(int) : dataReader.GetInt32(6);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: UserRole | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.UserRole")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(UserRole)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                return entity;
            }, 
            inverseNavigation: default(INavigationBase), 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                return [LIFTABLE Constant: ClrICollectionAccessor<User, List<UserRole>, UserRole> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("OrderApp.Core.UserAggregate.User").FindNavigation("Roles").GetCollectionAccessor()].Add(
                    entity: namelessParameter{8}, 
                    value: namelessParameter{9}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return IsTrue(resultCoordinator.ResultReady)
         ? (User)(resultContext.Values[0]) : default(User);
    }, 
    contextType: OrderApp.Infrastructure.Data.AppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-08-04 12:31:06.848 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:31:06.849 +04:00 [DBG] Creating DbConnection.
2025-08-04 12:31:06.852 +04:00 [DBG] Created DbConnection. (3ms).
2025-08-04 12:31:06.852 +04:00 [DBG] Created DbConnection. (3ms).
2025-08-04 12:31:06.855 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:06.857 +04:00 [DBG] Opening connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:06.898 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:06.899 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:31:06.901 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-08-04 12:31:06.903 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-08-04 12:31:06.905 +04:00 [DBG] Opened connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:06.905 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:31:06.906 +04:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-08-04 12:31:06.910 +04:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-08-04 12:31:06.911 +04:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-08-04 12:31:06.912 +04:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 12:31:07.024 +04:00 [INF] Executed DbCommand (111ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [u].[Id], [u].[Email], [u].[Name], [u].[Password], [u0].[Id], [u0].[RoleId], [u0].[UserId], [u0].[UserId1]
FROM [Users] AS [u]
LEFT JOIN [UserRoles] AS [u0] ON [u].[Id] = [u0].[UserId]
ORDER BY [u].[Id]
2025-08-04 12:31:07.024 +04:00 [INF] Executed DbCommand (119ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[CreatedAt], [o].[CreatedUserId], [o].[DeletedAt], [o].[DeletedUserId], [o].[IsDeleted], [o].[ModifiedAt], [o].[ModifiedUserId], [o].[OrderDate], [o].[ProductId], [o].[RestoredAt], [o].[RestoredUserId], [o].[UserId], [p].[Id], [p].[CompanyId], [p].[Name], [p].[Price], [u].[Id], [u].[Email], [u].[Name], [u].[Password]
FROM [Orders] AS [o]
INNER JOIN [Products] AS [p] ON [o].[ProductId] = [p].[Id]
INNER JOIN [Users] AS [u] ON [o].[UserId] = [u].[Id]
WHERE [o].[IsDeleted] = CAST(0 AS bit)
2025-08-04 12:31:07.081 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.081 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.107 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.109 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.110 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.112 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 85ms reading results.
2025-08-04 12:31:07.114 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.116 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (2ms).
2025-08-04 12:31:07.133 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.136 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.151 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.152 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.154 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.156 +04:00 [DBG] The navigation 'Order.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.157 +04:00 [DBG] Context 'AppDbContext' started tracking 'Product' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.158 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.159 +04:00 [DBG] Context 'AppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.161 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.162 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.165 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.167 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.169 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.170 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.171 +04:00 [INF] Executed endpoint 'HTTP: GET /Users'
2025-08-04 12:31:07.172 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.174 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.176 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.177 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.179 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.181 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.183 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.185 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.186 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.187 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.189 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.191 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.192 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.193 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.197 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.199 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.201 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.203 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.204 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.206 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.207 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.208 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.210 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.211 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.214 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.216 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.218 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.219 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.220 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.221 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.223 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.224 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.226 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.227 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.229 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.231 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.233 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.234 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.236 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.238 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.240 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.241 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.243 +04:00 [DBG] The navigation 'Order.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.246 +04:00 [DBG] Context 'AppDbContext' started tracking 'Order' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-08-04 12:31:07.248 +04:00 [DBG] Closing data reader to 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.250 +04:00 [DBG] A data reader for 'OrderApp' on server 'DESKTOP-ZAKIR' is being disposed after spending 219ms reading results.
2025-08-04 12:31:07.252 +04:00 [DBG] Closing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.254 +04:00 [DBG] Closed connection to database 'OrderApp' on server 'DESKTOP-ZAKIR' (1ms).
2025-08-04 12:31:07.275 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/users   Responded with [200] in 872ms
2025-08-04 12:31:07.276 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" completed keep alive response.
2025-08-04 12:31:07.278 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:31:07.279 +04:00 [INF] Executed endpoint 'HTTP: GET /Orders'
2025-08-04 12:31:07.283 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.285 +04:00 [INF] Received HTTP response headers after 998.2513ms - 200
2025-08-04 12:31:07.286 +04:00 [DBG] Disposed connection to database '' on server '' (2ms).
2025-08-04 12:31:07.287 +04:00 [INF] End processing HTTP request after 1015.3448ms - 200
2025-08-04 12:31:07.288 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/users - 200 454 application/json 896.7844ms
2025-08-04 12:31:07.292 +04:00 [DBG] Health check User API with status "Healthy" completed after 1040.8ms with message 'null'
2025-08-04 12:31:07.302 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/orders   Responded with [200] in 899ms
2025-08-04 12:31:07.302 +04:00 [INF] Received HTTP response headers after 1018.1911ms - 200
2025-08-04 12:31:07.302 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" completed keep alive response.
2025-08-04 12:31:07.304 +04:00 [INF] End processing HTTP request after 1031.9706ms - 200
2025-08-04 12:31:07.305 +04:00 [DBG] 'AppDbContext' disposed.
2025-08-04 12:31:07.307 +04:00 [DBG] Disposing connection to database 'OrderApp' on server 'DESKTOP-ZAKIR'.
2025-08-04 12:31:07.307 +04:00 [DBG] Health check Order API with status "Healthy" completed after 1056.138ms with message 'null'
2025-08-04 12:31:07.308 +04:00 [DBG] Disposed connection to database '' on server '' (1ms).
2025-08-04 12:31:07.311 +04:00 [INF] Request finished HTTP/1.1 GET https://localhost:57679/orders - 200 12676 application/json 920.1341ms
2025-08-04 12:31:07.318 +04:00 [DBG] Health check processing with combined status "Healthy" completed after 1107.7666ms
2025-08-04 12:31:07.688 +04:00 [INF] Executed endpoint 'Health checks'
2025-08-04 12:31:07.691 +04:00 [INF] Source:[::1] Request: GET https localhost:57679/health   Responded with [200] in 1504ms
2025-08-04 12:31:07.692 +04:00 [INF] Request finished HTTP/2 GET https://localhost:57679/health - 200 643 application/json 1521.3995ms
2025-08-04 12:31:07.974 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" received FIN.
2025-08-04 12:31:07.975 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" is closed. The last processed stream ID was 1.
2025-08-04 12:31:07.976 +04:00 [DBG] The connection queue processing loop for 0HNEJ5VD6K00J completed.
2025-08-04 12:31:07.977 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:31:07.990 +04:00 [DBG] Connection id "0HNEJ5VD6K00J" stopped.
2025-08-04 12:32:21.396 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" received FIN.
2025-08-04 12:32:21.396 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" received FIN.
2025-08-04 12:32:21.399 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" disconnecting.
2025-08-04 12:32:21.400 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:32:21.401 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-08-04 12:32:21.402 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" disconnecting.
2025-08-04 12:32:21.404 +04:00 [DBG] Connection id "0HNEJ5VD6K00K" stopped.
2025-08-04 12:32:21.410 +04:00 [DBG] Connection id "0HNEJ5VD6K00L" stopped.
2025-08-04 12:33:06.277 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'User API'
2025-08-04 12:33:06.277 +04:00 [DBG] HttpMessageHandler expired after 120000ms for client 'Order API'
2025-08-04 12:33:16.295 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:33:16.303 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0585ms - processed: 0 items - remaining: 2 items
2025-08-04 12:33:26.317 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:33:26.321 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0078ms - processed: 0 items - remaining: 2 items
2025-08-04 12:33:36.330 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:33:36.332 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0065ms - processed: 0 items - remaining: 2 items
2025-08-04 12:33:46.347 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:33:46.351 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0075ms - processed: 0 items - remaining: 2 items
2025-08-04 12:33:56.373 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:33:56.377 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0063ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:06.386 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:06.391 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0136ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:16.412 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:16.413 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0073ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:26.421 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:26.425 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0068ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:36.445 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:36.449 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0072ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:46.459 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:46.461 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0092ms - processed: 0 items - remaining: 2 items
2025-08-04 12:34:56.478 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:34:56.482 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0045ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:06.491 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:06.498 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0113ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:16.521 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:16.527 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0065ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:26.539 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:26.544 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0074ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:36.566 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:36.571 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0058ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:46.583 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:46.585 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.1806ms - processed: 0 items - remaining: 2 items
2025-08-04 12:35:56.600 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:35:56.603 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.01ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:06.618 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:06.623 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0064ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:16.629 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:16.632 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.005ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:26.642 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:26.644 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0093ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:36.660 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:36.664 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0069ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:46.670 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:46.674 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0101ms - processed: 0 items - remaining: 2 items
2025-08-04 12:36:56.683 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:36:56.691 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0094ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:06.703 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:06.707 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0085ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:16.727 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:16.736 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0117ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:26.756 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:26.764 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0084ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:36.778 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:36.783 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0077ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:46.799 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:46.807 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0146ms - processed: 0 items - remaining: 2 items
2025-08-04 12:37:56.823 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:37:56.832 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0073ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:06.857 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:06.862 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.1176ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:16.869 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:16.871 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0076ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:26.880 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:26.883 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0074ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:36.889 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:36.892 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0042ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:46.910 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:46.915 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0059ms - processed: 0 items - remaining: 2 items
2025-08-04 12:38:56.934 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:38:56.936 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0046ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:06.945 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:06.946 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0057ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:16.956 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:16.960 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0053ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:26.967 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:26.977 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0066ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:36.990 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:37.000 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.005ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:47.016 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:47.020 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.004ms - processed: 0 items - remaining: 2 items
2025-08-04 12:39:57.026 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:39:57.036 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0254ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:07.054 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:07.062 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0066ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:17.076 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:17.081 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0034ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:27.090 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:27.094 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0037ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:37.113 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:37.118 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0046ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:47.136 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:47.141 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.005ms - processed: 0 items - remaining: 2 items
2025-08-04 12:40:57.153 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:40:57.157 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0043ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:07.173 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:07.175 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0055ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:17.180 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:17.183 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0028ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:27.199 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:27.202 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.004ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:37.218 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:37.227 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0051ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:47.248 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:47.253 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0035ms - processed: 0 items - remaining: 2 items
2025-08-04 12:41:57.263 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:41:57.269 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.004ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:07.278 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:07.283 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0059ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:17.295 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:17.300 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0044ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:27.314 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:27.321 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0046ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:37.341 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:37.345 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0047ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:47.361 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:47.369 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.007ms - processed: 0 items - remaining: 2 items
2025-08-04 12:42:57.380 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:42:57.385 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0052ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:07.398 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:07.408 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.2381ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:17.434 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:17.443 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0069ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:27.456 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:27.461 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0034ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:37.471 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:37.480 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0051ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:47.500 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:47.509 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0036ms - processed: 0 items - remaining: 2 items
2025-08-04 12:43:57.521 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:43:57.527 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0035ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:07.536 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:07.539 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0035ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:17.547 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:17.551 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0028ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:27.567 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:27.569 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0018ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:37.574 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:37.575 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0018ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:47.581 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:47.588 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0037ms - processed: 0 items - remaining: 2 items
2025-08-04 12:44:57.594 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:44:57.597 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0019ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:07.605 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:07.608 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0029ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:17.619 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:17.621 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0022ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:27.626 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:27.628 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:37.643 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:37.646 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0025ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:47.650 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:47.652 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0033ms - processed: 0 items - remaining: 2 items
2025-08-04 12:45:57.663 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:45:57.667 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0026ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:07.669 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:07.672 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0017ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:17.679 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:17.680 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0023ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:27.689 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:27.693 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.004ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:37.708 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:37.711 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0036ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:47.725 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:47.727 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0032ms - processed: 0 items - remaining: 2 items
2025-08-04 12:46:57.738 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:46:57.741 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0159ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:07.754 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:07.755 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:17.759 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:17.760 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:27.763 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:27.764 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.002ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:37.770 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:37.771 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0025ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:47.776 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:47.779 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.002ms - processed: 0 items - remaining: 2 items
2025-08-04 12:47:57.791 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:47:57.793 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.002ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:07.798 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:07.799 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0024ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:17.807 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:17.809 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0042ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:27.819 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:27.820 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0023ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:37.836 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:37.838 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.003ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:47.845 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:47.847 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0023ms - processed: 0 items - remaining: 2 items
2025-08-04 12:48:57.850 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:48:57.852 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0018ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:07.861 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:07.862 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0027ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:17.875 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:17.878 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0031ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:27.888 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:27.889 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.005ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:37.906 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:37.907 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0022ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:47.923 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:47.925 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0027ms - processed: 0 items - remaining: 2 items
2025-08-04 12:49:57.929 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:49:57.931 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0023ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:07.938 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:07.940 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0028ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:17.948 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:17.950 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0022ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:27.953 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:27.956 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0022ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:37.959 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:37.961 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:47.966 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:47.968 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0123ms - processed: 0 items - remaining: 2 items
2025-08-04 12:50:57.982 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:50:57.984 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:07.992 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:07.995 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0015ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:18.003 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:18.005 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0035ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:28.020 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:28.022 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.002ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:38.024 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:38.026 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0018ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:48.041 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:48.044 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0017ms - processed: 0 items - remaining: 2 items
2025-08-04 12:51:58.060 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:51:58.061 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0191ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:08.073 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:08.075 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0017ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:18.092 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:18.095 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0016ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:28.101 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:28.104 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0024ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:38.117 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:38.120 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0015ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:48.129 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:48.131 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:52:58.133 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:52:58.135 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.002ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:08.147 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:08.149 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0019ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:18.160 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:18.164 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0033ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:28.184 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:28.189 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0031ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:38.199 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:38.204 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0032ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:48.213 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:48.222 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0047ms - processed: 0 items - remaining: 2 items
2025-08-04 12:53:58.241 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:53:58.250 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0053ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:08.268 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:08.277 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0049ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:18.298 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:18.307 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.006ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:28.322 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:28.327 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0033ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:38.337 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:38.345 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0045ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:48.360 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:48.368 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0041ms - processed: 0 items - remaining: 2 items
2025-08-04 12:54:58.379 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:54:58.386 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0044ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:08.402 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:08.407 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0029ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:18.414 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:18.416 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0019ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:28.432 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:28.435 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:38.445 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:38.448 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0034ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:48.457 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:48.460 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0021ms - processed: 0 items - remaining: 2 items
2025-08-04 12:55:58.473 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:55:58.476 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0017ms - processed: 0 items - remaining: 2 items
2025-08-04 12:56:08.480 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:56:08.483 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0025ms - processed: 0 items - remaining: 2 items
2025-08-04 12:56:18.499 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:56:18.503 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0041ms - processed: 0 items - remaining: 2 items
2025-08-04 12:56:28.520 +04:00 [DBG] Starting HttpMessageHandler cleanup cycle with 2 items
2025-08-04 12:56:28.528 +04:00 [DBG] Ending HttpMessageHandler cleanup cycle after 0.0049ms - processed: 0 items - remaining: 2 items
